/*
 * dkPlus API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.43
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DkPlusApi);
  }
}(this, function(expect, DkPlusApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('DkCloudDataModelSettingsSettingsModel', function() {
      beforeEach(function() {
        instance = new DkPlusApi.DkCloudDataModelSettingsSettingsModel();
      });

      it('should create an instance of DkCloudDataModelSettingsSettingsModel', function() {
        // TODO: update the code to test DkCloudDataModelSettingsSettingsModel
        expect(instance).to.be.a(DkPlusApi.DkCloudDataModelSettingsSettingsModel);
      });

      it('should have the property information (base name: "Information")', function() {
        // TODO: update the code to test the property information
        expect(instance).to.have.property('information');
        // expect(instance.information).to.be(expectedValueLiteral);
      });

      it('should have the property customer (base name: "Customer")', function() {
        // TODO: update the code to test the property customer
        expect(instance).to.have.property('customer');
        // expect(instance.customer).to.be(expectedValueLiteral);
      });

      it('should have the property product (base name: "Product")', function() {
        // TODO: update the code to test the property product
        expect(instance).to.have.property('product');
        // expect(instance.product).to.be(expectedValueLiteral);
      });

      it('should have the property vendor (base name: "Vendor")', function() {
        // TODO: update the code to test the property vendor
        expect(instance).to.have.property('vendor');
        // expect(instance.vendor).to.be(expectedValueLiteral);
      });

      it('should have the property sale (base name: "Sale")', function() {
        // TODO: update the code to test the property sale
        expect(instance).to.have.property('sale');
        // expect(instance.sale).to.be(expectedValueLiteral);
      });

      it('should have the property project (base name: "Project")', function() {
        // TODO: update the code to test the property project
        expect(instance).to.have.property('project');
        // expect(instance.project).to.be(expectedValueLiteral);
      });

      it('should have the property dimmension (base name: "Dimmension")', function() {
        // TODO: update the code to test the property dimmension
        expect(instance).to.have.property('dimmension');
        // expect(instance.dimmension).to.be(expectedValueLiteral);
      });

      it('should have the property general (base name: "General")', function() {
        // TODO: update the code to test the property general
        expect(instance).to.have.property('general');
        // expect(instance.general).to.be(expectedValueLiteral);
      });

      it('should have the property member (base name: "Member")', function() {
        // TODO: update the code to test the property member
        expect(instance).to.have.property('member');
        // expect(instance.member).to.be(expectedValueLiteral);
      });

      it('should have the property webServiceVersion (base name: "WebServiceVersion")', function() {
        // TODO: update the code to test the property webServiceVersion
        expect(instance).to.have.property('webServiceVersion');
        // expect(instance.webServiceVersion).to.be(expectedValueLiteral);
      });

      it('should have the property dkVersion (base name: "dkVersion")', function() {
        // TODO: update the code to test the property dkVersion
        expect(instance).to.have.property('dkVersion');
        // expect(instance.dkVersion).to.be(expectedValueLiteral);
      });

    });
  });

}));
