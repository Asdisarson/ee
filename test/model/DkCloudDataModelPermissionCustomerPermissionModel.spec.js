/*
 * dkPlus API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.43
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DkPlusApi);
  }
}(this, function(expect, DkPlusApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('DkCloudDataModelPermissionCustomerPermissionModel', function() {
      beforeEach(function() {
        instance = new DkPlusApi.DkCloudDataModelPermissionCustomerPermissionModel();
      });

      it('should create an instance of DkCloudDataModelPermissionCustomerPermissionModel', function() {
        // TODO: update the code to test DkCloudDataModelPermissionCustomerPermissionModel
        expect(instance).to.be.a(DkPlusApi.DkCloudDataModelPermissionCustomerPermissionModel);
      });

      it('should have the property customers (base name: "Customers")', function() {
        // TODO: update the code to test the property customers
        expect(instance).to.have.property('customers');
        // expect(instance.customers).to.be(expectedValueLiteral);
      });

      it('should have the property customerDashboard (base name: "CustomerDashboard")', function() {
        // TODO: update the code to test the property customerDashboard
        expect(instance).to.have.property('customerDashboard');
        // expect(instance.customerDashboard).to.be(expectedValueLiteral);
      });

      it('should have the property groups (base name: "Groups")', function() {
        // TODO: update the code to test the property groups
        expect(instance).to.have.property('groups');
        // expect(instance.groups).to.be(expectedValueLiteral);
      });

      it('should have the property invoices (base name: "Invoices")', function() {
        // TODO: update the code to test the property invoices
        expect(instance).to.have.property('invoices');
        // expect(instance.invoices).to.be(expectedValueLiteral);
      });

      it('should have the property projects (base name: "Projects")', function() {
        // TODO: update the code to test the property projects
        expect(instance).to.have.property('projects');
        // expect(instance.projects).to.be(expectedValueLiteral);
      });

      it('should have the property contacts (base name: "Contacts")', function() {
        // TODO: update the code to test the property contacts
        expect(instance).to.have.property('contacts');
        // expect(instance.contacts).to.be(expectedValueLiteral);
      });

      it('should have the property itemReccivers (base name: "ItemReccivers")', function() {
        // TODO: update the code to test the property itemReccivers
        expect(instance).to.have.property('itemReccivers');
        // expect(instance.itemReccivers).to.be(expectedValueLiteral);
      });

      it('should have the property memoes (base name: "Memoes")', function() {
        // TODO: update the code to test the property memoes
        expect(instance).to.have.property('memoes');
        // expect(instance.memoes).to.be(expectedValueLiteral);
      });

      it('should have the property attributes (base name: "Attributes")', function() {
        // TODO: update the code to test the property attributes
        expect(instance).to.have.property('attributes');
        // expect(instance.attributes).to.be(expectedValueLiteral);
      });

      it('should have the property attachments (base name: "Attachments")', function() {
        // TODO: update the code to test the property attachments
        expect(instance).to.have.property('attachments');
        // expect(instance.attachments).to.be(expectedValueLiteral);
      });

      it('should have the property modifications (base name: "Modifications")', function() {
        // TODO: update the code to test the property modifications
        expect(instance).to.have.property('modifications');
        // expect(instance.modifications).to.be(expectedValueLiteral);
      });

      it('should have the property settings (base name: "Settings")', function() {
        // TODO: update the code to test the property settings
        expect(instance).to.have.property('settings');
        // expect(instance.settings).to.be(expectedValueLiteral);
      });

      it('should have the property transactions (base name: "Transactions")', function() {
        // TODO: update the code to test the property transactions
        expect(instance).to.have.property('transactions');
        // expect(instance.transactions).to.be(expectedValueLiteral);
      });

      it('should have the property enabled (base name: "Enabled")', function() {
        // TODO: update the code to test the property enabled
        expect(instance).to.have.property('enabled');
        // expect(instance.enabled).to.be(expectedValueLiteral);
      });

    });
  });

}));
