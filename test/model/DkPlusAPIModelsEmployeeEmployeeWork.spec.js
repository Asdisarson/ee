/*
 * dkPlus API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.43
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DkPlusApi);
  }
}(this, function(expect, DkPlusApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('DkPlusAPIModelsEmployeeEmployeeWork', function() {
      beforeEach(function() {
        instance = new DkPlusApi.DkPlusAPIModelsEmployeeEmployeeWork();
      });

      it('should create an instance of DkPlusAPIModelsEmployeeEmployeeWork', function() {
        // TODO: update the code to test DkPlusAPIModelsEmployeeEmployeeWork
        expect(instance).to.be.a(DkPlusApi.DkPlusAPIModelsEmployeeEmployeeWork);
      });

      it('should have the property _date (base name: "Date")', function() {
        // TODO: update the code to test the property _date
        expect(instance).to.have.property('_date');
        // expect(instance._date).to.be(expectedValueLiteral);
      });

      it('should have the property text (base name: "Text")', function() {
        // TODO: update the code to test the property text
        expect(instance).to.have.property('text');
        // expect(instance.text).to.be(expectedValueLiteral);
      });

      it('should have the property project (base name: "Project")', function() {
        // TODO: update the code to test the property project
        expect(instance).to.have.property('project');
        // expect(instance.project).to.be(expectedValueLiteral);
      });

      it('should have the property phase (base name: "Phase")', function() {
        // TODO: update the code to test the property phase
        expect(instance).to.have.property('phase');
        // expect(instance.phase).to.be(expectedValueLiteral);
      });

      it('should have the property task (base name: "Task")', function() {
        // TODO: update the code to test the property task
        expect(instance).to.have.property('task');
        // expect(instance.task).to.be(expectedValueLiteral);
      });

      it('should have the property dayTime (base name: "DayTime")', function() {
        // TODO: update the code to test the property dayTime
        expect(instance).to.have.property('dayTime');
        // expect(instance.dayTime).to.be(expectedValueLiteral);
      });

      it('should have the property driveTime (base name: "DriveTime")', function() {
        // TODO: update the code to test the property driveTime
        expect(instance).to.have.property('driveTime');
        // expect(instance.driveTime).to.be(expectedValueLiteral);
      });

      it('should have the property overTime (base name: "OverTime")', function() {
        // TODO: update the code to test the property overTime
        expect(instance).to.have.property('overTime');
        // expect(instance.overTime).to.be(expectedValueLiteral);
      });

      it('should have the property billable (base name: "Billable")', function() {
        // TODO: update the code to test the property billable
        expect(instance).to.have.property('billable');
        // expect(instance.billable).to.be(expectedValueLiteral);
      });

    });
  });

}));
