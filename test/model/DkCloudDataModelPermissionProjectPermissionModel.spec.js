/*
 * dkPlus API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.43
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DkPlusApi);
  }
}(this, function(expect, DkPlusApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('DkCloudDataModelPermissionProjectPermissionModel', function() {
      beforeEach(function() {
        instance = new DkPlusApi.DkCloudDataModelPermissionProjectPermissionModel();
      });

      it('should create an instance of DkCloudDataModelPermissionProjectPermissionModel', function() {
        // TODO: update the code to test DkCloudDataModelPermissionProjectPermissionModel
        expect(instance).to.be.a(DkPlusApi.DkCloudDataModelPermissionProjectPermissionModel);
      });

      it('should have the property invoices (base name: "Invoices")', function() {
        // TODO: update the code to test the property invoices
        expect(instance).to.have.property('invoices');
        // expect(instance.invoices).to.be(expectedValueLiteral);
      });

      it('should have the property reports (base name: "Reports")', function() {
        // TODO: update the code to test the property reports
        expect(instance).to.have.property('reports');
        // expect(instance.reports).to.be(expectedValueLiteral);
      });

      it('should have the property dashboard (base name: "Dashboard")', function() {
        // TODO: update the code to test the property dashboard
        expect(instance).to.have.property('dashboard');
        // expect(instance.dashboard).to.be(expectedValueLiteral);
      });

      it('should have the property phases (base name: "Phases")', function() {
        // TODO: update the code to test the property phases
        expect(instance).to.have.property('phases');
        // expect(instance.phases).to.be(expectedValueLiteral);
      });

      it('should have the property tasks (base name: "Tasks")', function() {
        // TODO: update the code to test the property tasks
        expect(instance).to.have.property('tasks');
        // expect(instance.tasks).to.be(expectedValueLiteral);
      });

      it('should have the property journal (base name: "Journal")', function() {
        // TODO: update the code to test the property journal
        expect(instance).to.have.property('journal');
        // expect(instance.journal).to.be(expectedValueLiteral);
      });

      it('should have the property requests (base name: "Requests")', function() {
        // TODO: update the code to test the property requests
        expect(instance).to.have.property('requests');
        // expect(instance.requests).to.be(expectedValueLiteral);
      });

      it('should have the property settings (base name: "Settings")', function() {
        // TODO: update the code to test the property settings
        expect(instance).to.have.property('settings');
        // expect(instance.settings).to.be(expectedValueLiteral);
      });

      it('should have the property enabled (base name: "Enabled")', function() {
        // TODO: update the code to test the property enabled
        expect(instance).to.have.property('enabled');
        // expect(instance.enabled).to.be(expectedValueLiteral);
      });

    });
  });

}));
