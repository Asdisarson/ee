/*
 * dkPlus API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.43
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DkPlusApi);
  }
}(this, function(expect, DkPlusApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('DkCloudDataModelPermissionModulePermission', function() {
      beforeEach(function() {
        instance = new DkPlusApi.DkCloudDataModelPermissionModulePermission();
      });

      it('should create an instance of DkCloudDataModelPermissionModulePermission', function() {
        // TODO: update the code to test DkCloudDataModelPermissionModulePermission
        expect(instance).to.be.a(DkPlusApi.DkCloudDataModelPermissionModulePermission);
      });

      it('should have the property generalLedgerPermission (base name: "GeneralLedgerPermission")', function() {
        // TODO: update the code to test the property generalLedgerPermission
        expect(instance).to.have.property('generalLedgerPermission');
        // expect(instance.generalLedgerPermission).to.be(expectedValueLiteral);
      });

      it('should have the property vendorPermission (base name: "VendorPermission")', function() {
        // TODO: update the code to test the property vendorPermission
        expect(instance).to.have.property('vendorPermission');
        // expect(instance.vendorPermission).to.be(expectedValueLiteral);
      });

      it('should have the property customerPermission (base name: "CustomerPermission")', function() {
        // TODO: update the code to test the property customerPermission
        expect(instance).to.have.property('customerPermission');
        // expect(instance.customerPermission).to.be(expectedValueLiteral);
      });

      it('should have the property productPermission (base name: "ProductPermission")', function() {
        // TODO: update the code to test the property productPermission
        expect(instance).to.have.property('productPermission');
        // expect(instance.productPermission).to.be(expectedValueLiteral);
      });

      it('should have the property salesPermission (base name: "SalesPermission")', function() {
        // TODO: update the code to test the property salesPermission
        expect(instance).to.have.property('salesPermission');
        // expect(instance.salesPermission).to.be(expectedValueLiteral);
      });

      it('should have the property memberPermission (base name: "MemberPermission")', function() {
        // TODO: update the code to test the property memberPermission
        expect(instance).to.have.property('memberPermission');
        // expect(instance.memberPermission).to.be(expectedValueLiteral);
      });

      it('should have the property projectPermission (base name: "ProjectPermission")', function() {
        // TODO: update the code to test the property projectPermission
        expect(instance).to.have.property('projectPermission');
        // expect(instance.projectPermission).to.be(expectedValueLiteral);
      });

      it('should have the property purchaseOrderPermission (base name: "PurchaseOrderPermission")', function() {
        // TODO: update the code to test the property purchaseOrderPermission
        expect(instance).to.have.property('purchaseOrderPermission');
        // expect(instance.purchaseOrderPermission).to.be(expectedValueLiteral);
      });

      it('should have the property cRMPermission (base name: "CRMPermission")', function() {
        // TODO: update the code to test the property cRMPermission
        expect(instance).to.have.property('cRMPermission');
        // expect(instance.cRMPermission).to.be(expectedValueLiteral);
      });

      it('should have the property generalPermission (base name: "GeneralPermission")', function() {
        // TODO: update the code to test the property generalPermission
        expect(instance).to.have.property('generalPermission');
        // expect(instance.generalPermission).to.be(expectedValueLiteral);
      });

      it('should have the property payrollPermission (base name: "PayrollPermission")', function() {
        // TODO: update the code to test the property payrollPermission
        expect(instance).to.have.property('payrollPermission');
        // expect(instance.payrollPermission).to.be(expectedValueLiteral);
      });

    });
  });

}));
