/*
 * dkPlus API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.43
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DkPlusApi);
  }
}(this, function(expect, DkPlusApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('DkCloudDataModelMembersEducation', function() {
      beforeEach(function() {
        instance = new DkPlusApi.DkCloudDataModelMembersEducation();
      });

      it('should create an instance of DkCloudDataModelMembersEducation', function() {
        // TODO: update the code to test DkCloudDataModelMembersEducation
        expect(instance).to.be.a(DkPlusApi.DkCloudDataModelMembersEducation);
      });

      it('should have the property ID (base name: "ID")', function() {
        // TODO: update the code to test the property ID
        expect(instance).to.have.property('ID');
        // expect(instance.ID).to.be(expectedValueLiteral);
      });

      it('should have the property member (base name: "Member")', function() {
        // TODO: update the code to test the property member
        expect(instance).to.have.property('member');
        // expect(instance.member).to.be(expectedValueLiteral);
      });

      it('should have the property institution (base name: "Institution")', function() {
        // TODO: update the code to test the property institution
        expect(instance).to.have.property('institution');
        // expect(instance.institution).to.be(expectedValueLiteral);
      });

      it('should have the property period (base name: "Period")', function() {
        // TODO: update the code to test the property period
        expect(instance).to.have.property('period');
        // expect(instance.period).to.be(expectedValueLiteral);
      });

      it('should have the property course (base name: "Course")', function() {
        // TODO: update the code to test the property course
        expect(instance).to.have.property('course');
        // expect(instance.course).to.be(expectedValueLiteral);
      });

      it('should have the property graduation (base name: "Graduation")', function() {
        // TODO: update the code to test the property graduation
        expect(instance).to.have.property('graduation');
        // expect(instance.graduation).to.be(expectedValueLiteral);
      });

      it('should have the property description (base name: "Description")', function() {
        // TODO: update the code to test the property description
        expect(instance).to.have.property('description');
        // expect(instance.description).to.be(expectedValueLiteral);
      });

      it('should have the property reference (base name: "Reference")', function() {
        // TODO: update the code to test the property reference
        expect(instance).to.have.property('reference');
        // expect(instance.reference).to.be(expectedValueLiteral);
      });

      it('should have the property zipCode (base name: "ZipCode")', function() {
        // TODO: update the code to test the property zipCode
        expect(instance).to.have.property('zipCode');
        // expect(instance.zipCode).to.be(expectedValueLiteral);
      });

      it('should have the property countryCode (base name: "CountryCode")', function() {
        // TODO: update the code to test the property countryCode
        expect(instance).to.have.property('countryCode');
        // expect(instance.countryCode).to.be(expectedValueLiteral);
      });

      it('should have the property masterSSNumber (base name: "MasterSSNumber")', function() {
        // TODO: update the code to test the property masterSSNumber
        expect(instance).to.have.property('masterSSNumber');
        // expect(instance.masterSSNumber).to.be(expectedValueLiteral);
      });

      it('should have the property masterName (base name: "MasterName")', function() {
        // TODO: update the code to test the property masterName
        expect(instance).to.have.property('masterName');
        // expect(instance.masterName).to.be(expectedValueLiteral);
      });

      it('should have the property companySSNumber (base name: "CompanySSNumber")', function() {
        // TODO: update the code to test the property companySSNumber
        expect(instance).to.have.property('companySSNumber');
        // expect(instance.companySSNumber).to.be(expectedValueLiteral);
      });

      it('should have the property companyName (base name: "CompanyName")', function() {
        // TODO: update the code to test the property companyName
        expect(instance).to.have.property('companyName');
        // expect(instance.companyName).to.be(expectedValueLiteral);
      });

      it('should have the property institutionDesc (base name: "InstitutionDesc")', function() {
        // TODO: update the code to test the property institutionDesc
        expect(instance).to.have.property('institutionDesc');
        // expect(instance.institutionDesc).to.be(expectedValueLiteral);
      });

      it('should have the property extraProperties (base name: "ExtraProperties")', function() {
        // TODO: update the code to test the property extraProperties
        expect(instance).to.have.property('extraProperties');
        // expect(instance.extraProperties).to.be(expectedValueLiteral);
      });

    });
  });

}));
