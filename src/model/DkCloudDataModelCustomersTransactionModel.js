/*
 * dkPlus API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.43
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.DkPlusApi) {
      root.DkPlusApi = {};
    }
    root.DkPlusApi.DkCloudDataModelCustomersTransactionModel = factory(root.DkPlusApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The DkCloudDataModelCustomersTransactionModel model module.
   * @module model/DkCloudDataModelCustomersTransactionModel
   * @version v1
   */

  /**
   * Constructs a new <code>DkCloudDataModelCustomersTransactionModel</code>.
   * @alias module:model/DkCloudDataModelCustomersTransactionModel
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>DkCloudDataModelCustomersTransactionModel</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DkCloudDataModelCustomersTransactionModel} obj Optional instance to populate.
   * @return {module:model/DkCloudDataModelCustomersTransactionModel} The populated <code>DkCloudDataModelCustomersTransactionModel</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('Modified'))
        obj.modified = ApiClient.convertToType(data['Modified'], 'Date');
      if (data.hasOwnProperty('ID'))
        obj.ID = ApiClient.convertToType(data['ID'], 'Number');
      if (data.hasOwnProperty('HeadId'))
        obj.headId = ApiClient.convertToType(data['HeadId'], 'Number');
      if (data.hasOwnProperty('Sequence'))
        obj.sequence = ApiClient.convertToType(data['Sequence'], 'Number');
      if (data.hasOwnProperty('InvoiceNumber'))
        obj.invoiceNumber = ApiClient.convertToType(data['InvoiceNumber'], 'String');
      if (data.hasOwnProperty('Customer'))
        obj.customer = ApiClient.convertToType(data['Customer'], 'String');
      if (data.hasOwnProperty('CreatedBy'))
        obj.createdBy = ApiClient.convertToType(data['CreatedBy'], 'String');
      if (data.hasOwnProperty('Text'))
        obj.text = ApiClient.convertToType(data['Text'], 'String');
      if (data.hasOwnProperty('Reference'))
        obj.reference = ApiClient.convertToType(data['Reference'], 'String');
      if (data.hasOwnProperty('Dim1'))
        obj.dim1 = ApiClient.convertToType(data['Dim1'], 'String');
      if (data.hasOwnProperty('Dim2'))
        obj.dim2 = ApiClient.convertToType(data['Dim2'], 'String');
      if (data.hasOwnProperty('Dim3'))
        obj.dim3 = ApiClient.convertToType(data['Dim3'], 'String');
      if (data.hasOwnProperty('JournalDate'))
        obj.journalDate = ApiClient.convertToType(data['JournalDate'], 'Date');
      if (data.hasOwnProperty('DueDate'))
        obj.dueDate = ApiClient.convertToType(data['DueDate'], 'Date');
      if (data.hasOwnProperty('JournalHeadCode'))
        obj.journalHeadCode = ApiClient.convertToType(data['JournalHeadCode'], 'String');
      if (data.hasOwnProperty('SettledCurrencyAmount'))
        obj.settledCurrencyAmount = ApiClient.convertToType(data['SettledCurrencyAmount'], 'Number');
      if (data.hasOwnProperty('SettledAmount'))
        obj.settledAmount = ApiClient.convertToType(data['SettledAmount'], 'Number');
      if (data.hasOwnProperty('SettledStatus'))
        obj.settledStatus = ApiClient.convertToType(data['SettledStatus'], 'Number');
      if (data.hasOwnProperty('Settled'))
        obj.settled = ApiClient.convertToType(data['Settled'], 'Boolean');
      if (data.hasOwnProperty('InputAmount'))
        obj.inputAmount = ApiClient.convertToType(data['InputAmount'], 'Number');
      if (data.hasOwnProperty('CurrencyAmount'))
        obj.currencyAmount = ApiClient.convertToType(data['CurrencyAmount'], 'Number');
      if (data.hasOwnProperty('Amount'))
        obj.amount = ApiClient.convertToType(data['Amount'], 'Number');
      if (data.hasOwnProperty('Currency'))
        obj.currency = ApiClient.convertToType(data['Currency'], 'String');
      if (data.hasOwnProperty('Exchange'))
        obj.exchange = ApiClient.convertToType(data['Exchange'], 'Number');
      if (data.hasOwnProperty('Code'))
        obj.code = ApiClient.convertToType(data['Code'], 'Number');
      if (data.hasOwnProperty('Voucher'))
        obj.voucher = ApiClient.convertToType(data['Voucher'], 'String');
      if (data.hasOwnProperty('Origin'))
        obj.origin = ApiClient.convertToType(data['Origin'], 'Number');
      if (data.hasOwnProperty('ClaimStatus'))
        obj.claimStatus = ApiClient.convertToType(data['ClaimStatus'], 'Number');
      if (data.hasOwnProperty('RecordType'))
        obj.recordType = ApiClient.convertToType(data['RecordType'], 'String');
      if (data.hasOwnProperty('JournalType'))
        obj.journalType = ApiClient.convertToType(data['JournalType'], 'String');
      if (data.hasOwnProperty('SettleId'))
        obj.settleId = ApiClient.convertToType(data['SettleId'], 'Number');
      if (data.hasOwnProperty('ObjectDate'))
        obj.objectDate = ApiClient.convertToType(data['ObjectDate'], 'Date');
      if (data.hasOwnProperty('Deleted'))
        obj.deleted = ApiClient.convertToType(data['Deleted'], 'Boolean');
      if (data.hasOwnProperty('Created'))
        obj.created = ApiClient.convertToType(data['Created'], 'Date');
    }
    return obj;
  }

  /**
   * @member {Date} modified
   */
  exports.prototype.modified = undefined;

  /**
   * @member {Number} ID
   */
  exports.prototype.ID = undefined;

  /**
   * @member {Number} headId
   */
  exports.prototype.headId = undefined;

  /**
   * @member {Number} sequence
   */
  exports.prototype.sequence = undefined;

  /**
   * @member {String} invoiceNumber
   */
  exports.prototype.invoiceNumber = undefined;

  /**
   * @member {String} customer
   */
  exports.prototype.customer = undefined;

  /**
   * @member {String} createdBy
   */
  exports.prototype.createdBy = undefined;

  /**
   * @member {String} text
   */
  exports.prototype.text = undefined;

  /**
   * @member {String} reference
   */
  exports.prototype.reference = undefined;

  /**
   * @member {String} dim1
   */
  exports.prototype.dim1 = undefined;

  /**
   * @member {String} dim2
   */
  exports.prototype.dim2 = undefined;

  /**
   * @member {String} dim3
   */
  exports.prototype.dim3 = undefined;

  /**
   * @member {Date} journalDate
   */
  exports.prototype.journalDate = undefined;

  /**
   * @member {Date} dueDate
   */
  exports.prototype.dueDate = undefined;

  /**
   * @member {String} journalHeadCode
   */
  exports.prototype.journalHeadCode = undefined;

  /**
   * @member {Number} settledCurrencyAmount
   */
  exports.prototype.settledCurrencyAmount = undefined;

  /**
   * @member {Number} settledAmount
   */
  exports.prototype.settledAmount = undefined;

  /**
   * @member {Number} settledStatus
   */
  exports.prototype.settledStatus = undefined;

  /**
   * @member {Boolean} settled
   */
  exports.prototype.settled = undefined;

  /**
   * @member {Number} inputAmount
   */
  exports.prototype.inputAmount = undefined;

  /**
   * @member {Number} currencyAmount
   */
  exports.prototype.currencyAmount = undefined;

  /**
   * @member {Number} amount
   */
  exports.prototype.amount = undefined;

  /**
   * @member {String} currency
   */
  exports.prototype.currency = undefined;

  /**
   * @member {Number} exchange
   */
  exports.prototype.exchange = undefined;

  /**
   * @member {Number} code
   */
  exports.prototype.code = undefined;

  /**
   * @member {String} voucher
   */
  exports.prototype.voucher = undefined;

  /**
   * @member {Number} origin
   */
  exports.prototype.origin = undefined;

  /**
   * @member {Number} claimStatus
   */
  exports.prototype.claimStatus = undefined;

  /**
   * @member {module:model/DkCloudDataModelCustomersTransactionModel.RecordTypeEnum} recordType
   */
  exports.prototype.recordType = undefined;

  /**
   * @member {module:model/DkCloudDataModelCustomersTransactionModel.JournalTypeEnum} journalType
   */
  exports.prototype.journalType = undefined;

  /**
   * @member {Number} settleId
   */
  exports.prototype.settleId = undefined;

  /**
   * @member {Date} objectDate
   */
  exports.prototype.objectDate = undefined;

  /**
   * @member {Boolean} deleted
   */
  exports.prototype.deleted = undefined;

  /**
   * @member {Date} created
   */
  exports.prototype.created = undefined;



  /**
   * Allowed values for the <code>recordType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.RecordTypeEnum = {
    /**
     * value: "DebetJournal"
     * @const
     */
    debetJournal: "DebetJournal",

    /**
     * value: "CreditJournal"
     * @const
     */
    creditJournal: "CreditJournal",

    /**
     * value: "DebetInvoice"
     * @const
     */
    debetInvoice: "DebetInvoice",

    /**
     * value: "CreditInvoice"
     * @const
     */
    creditInvoice: "CreditInvoice",

    /**
     * value: "ReturnInvoice"
     * @const
     */
    returnInvoice: "ReturnInvoice",

    /**
     * value: "Interest"
     * @const
     */
    interest: "Interest",

    /**
     * value: "ExchangeRateDifference"
     * @const
     */
    exchangeRateDifference: "ExchangeRateDifference",

    /**
     * value: "DebetORJournal"
     * @const
     */
    debetORJournal: "DebetORJournal",

    /**
     * value: "CreditORJournal"
     * @const
     */
    creditORJournal: "CreditORJournal",

    /**
     * value: "ClaimBase"
     * @const
     */
    claimBase: "ClaimBase",

    /**
     * value: "PayedClaim"
     * @const
     */
    payedClaim: "PayedClaim",

    /**
     * value: "DroppedClaim"
     * @const
     */
    droppedClaim: "DroppedClaim",

    /**
     * value: "CreditcardBase"
     * @const
     */
    creditcardBase: "CreditcardBase",

    /**
     * value: "PayedCreditcard"
     * @const
     */
    payedCreditcard: "PayedCreditcard"
  };

  /**
   * Allowed values for the <code>journalType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.JournalTypeEnum = {
    /**
     * value: "GeneralLedger"
     * @const
     */
    generalLedger: "GeneralLedger",

    /**
     * value: "AccountsReceivable"
     * @const
     */
    accountsReceivable: "AccountsReceivable",

    /**
     * value: "AccountsPayable"
     * @const
     */
    accountsPayable: "AccountsPayable",

    /**
     * value: "Projects"
     * @const
     */
    projects: "Projects",

    /**
     * value: "Payroll"
     * @const
     */
    payroll: "Payroll",

    /**
     * value: "FixedAssets"
     * @const
     */
    fixedAssets: "FixedAssets",

    /**
     * value: "MemberPayments"
     * @const
     */
    memberPayments: "MemberPayments",

    /**
     * value: "BankTransaction"
     * @const
     */
    bankTransaction: "BankTransaction",

    /**
     * value: "Supporter"
     * @const
     */
    supporter: "Supporter",

    /**
     * value: "Booking"
     * @const
     */
    booking: "Booking"
  };
  return exports;
}));
