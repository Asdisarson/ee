/*
 * dkPlus API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.43
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.DkPlusApi) {
      root.DkPlusApi = {};
    }
    root.DkPlusApi.DkCloudDataModelPermissionMemberPermissionModel = factory(root.DkPlusApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The DkCloudDataModelPermissionMemberPermissionModel model module.
   * @module model/DkCloudDataModelPermissionMemberPermissionModel
   * @version v1
   */

  /**
   * Constructs a new <code>DkCloudDataModelPermissionMemberPermissionModel</code>.
   * @alias module:model/DkCloudDataModelPermissionMemberPermissionModel
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>DkCloudDataModelPermissionMemberPermissionModel</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DkCloudDataModelPermissionMemberPermissionModel} obj Optional instance to populate.
   * @return {module:model/DkCloudDataModelPermissionMemberPermissionModel} The populated <code>DkCloudDataModelPermissionMemberPermissionModel</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('Members'))
        obj.members = ApiClient.convertToType(data['Members'], 'String');
      if (data.hasOwnProperty('MemberDashboard'))
        obj.memberDashboard = ApiClient.convertToType(data['MemberDashboard'], 'String');
      if (data.hasOwnProperty('Groups'))
        obj.groups = ApiClient.convertToType(data['Groups'], 'String');
      if (data.hasOwnProperty('Invoices'))
        obj.invoices = ApiClient.convertToType(data['Invoices'], 'String');
      if (data.hasOwnProperty('Carrier'))
        obj.carrier = ApiClient.convertToType(data['Carrier'], 'String');
      if (data.hasOwnProperty('SubGroups'))
        obj.subGroups = ApiClient.convertToType(data['SubGroups'], 'String');
      if (data.hasOwnProperty('Membership'))
        obj.membership = ApiClient.convertToType(data['Membership'], 'String');
      if (data.hasOwnProperty('Education'))
        obj.education = ApiClient.convertToType(data['Education'], 'String');
      if (data.hasOwnProperty('Applications'))
        obj.applications = ApiClient.convertToType(data['Applications'], 'String');
      if (data.hasOwnProperty('FundPayments'))
        obj.fundPayments = ApiClient.convertToType(data['FundPayments'], 'String');
      if (data.hasOwnProperty('Statistics'))
        obj.statistics = ApiClient.convertToType(data['Statistics'], 'String');
      if (data.hasOwnProperty('Resume'))
        obj.resume = ApiClient.convertToType(data['Resume'], 'String');
      if (data.hasOwnProperty('Settings'))
        obj.settings = ApiClient.convertToType(data['Settings'], 'String');
      if (data.hasOwnProperty('Enabled'))
        obj.enabled = ApiClient.convertToType(data['Enabled'], 'String');
    }
    return obj;
  }

  /**
   * @member {module:model/DkCloudDataModelPermissionMemberPermissionModel.MembersEnum} members
   */
  exports.prototype.members = undefined;

  /**
   * @member {module:model/DkCloudDataModelPermissionMemberPermissionModel.MemberDashboardEnum} memberDashboard
   */
  exports.prototype.memberDashboard = undefined;

  /**
   * @member {module:model/DkCloudDataModelPermissionMemberPermissionModel.GroupsEnum} groups
   */
  exports.prototype.groups = undefined;

  /**
   * @member {module:model/DkCloudDataModelPermissionMemberPermissionModel.InvoicesEnum} invoices
   */
  exports.prototype.invoices = undefined;

  /**
   * @member {module:model/DkCloudDataModelPermissionMemberPermissionModel.CarrierEnum} carrier
   */
  exports.prototype.carrier = undefined;

  /**
   * @member {module:model/DkCloudDataModelPermissionMemberPermissionModel.SubGroupsEnum} subGroups
   */
  exports.prototype.subGroups = undefined;

  /**
   * @member {module:model/DkCloudDataModelPermissionMemberPermissionModel.MembershipEnum} membership
   */
  exports.prototype.membership = undefined;

  /**
   * @member {module:model/DkCloudDataModelPermissionMemberPermissionModel.EducationEnum} education
   */
  exports.prototype.education = undefined;

  /**
   * @member {module:model/DkCloudDataModelPermissionMemberPermissionModel.ApplicationsEnum} applications
   */
  exports.prototype.applications = undefined;

  /**
   * @member {module:model/DkCloudDataModelPermissionMemberPermissionModel.FundPaymentsEnum} fundPayments
   */
  exports.prototype.fundPayments = undefined;

  /**
   * @member {module:model/DkCloudDataModelPermissionMemberPermissionModel.StatisticsEnum} statistics
   */
  exports.prototype.statistics = undefined;

  /**
   * @member {module:model/DkCloudDataModelPermissionMemberPermissionModel.ResumeEnum} resume
   */
  exports.prototype.resume = undefined;

  /**
   * @member {module:model/DkCloudDataModelPermissionMemberPermissionModel.SettingsEnum} settings
   */
  exports.prototype.settings = undefined;

  /**
   * @member {module:model/DkCloudDataModelPermissionMemberPermissionModel.EnabledEnum} enabled
   */
  exports.prototype.enabled = undefined;



  /**
   * Allowed values for the <code>members</code> property.
   * @enum {String}
   * @readonly
   */
  exports.MembersEnum = {
    /**
     * value: "Full"
     * @const
     */
    full: "Full",

    /**
     * value: "View"
     * @const
     */
    view: "View",

    /**
     * value: "Modify"
     * @const
     */
    modify: "Modify",

    /**
     * value: "None"
     * @const
     */
    none: "None",

    /**
     * value: "Deny"
     * @const
     */
    deny: "Deny"
  };

  /**
   * Allowed values for the <code>memberDashboard</code> property.
   * @enum {String}
   * @readonly
   */
  exports.MemberDashboardEnum = {
    /**
     * value: "Full"
     * @const
     */
    full: "Full",

    /**
     * value: "View"
     * @const
     */
    view: "View",

    /**
     * value: "Modify"
     * @const
     */
    modify: "Modify",

    /**
     * value: "None"
     * @const
     */
    none: "None",

    /**
     * value: "Deny"
     * @const
     */
    deny: "Deny"
  };

  /**
   * Allowed values for the <code>groups</code> property.
   * @enum {String}
   * @readonly
   */
  exports.GroupsEnum = {
    /**
     * value: "Full"
     * @const
     */
    full: "Full",

    /**
     * value: "View"
     * @const
     */
    view: "View",

    /**
     * value: "Modify"
     * @const
     */
    modify: "Modify",

    /**
     * value: "None"
     * @const
     */
    none: "None",

    /**
     * value: "Deny"
     * @const
     */
    deny: "Deny"
  };

  /**
   * Allowed values for the <code>invoices</code> property.
   * @enum {String}
   * @readonly
   */
  exports.InvoicesEnum = {
    /**
     * value: "Full"
     * @const
     */
    full: "Full",

    /**
     * value: "View"
     * @const
     */
    view: "View",

    /**
     * value: "Modify"
     * @const
     */
    modify: "Modify",

    /**
     * value: "None"
     * @const
     */
    none: "None",

    /**
     * value: "Deny"
     * @const
     */
    deny: "Deny"
  };

  /**
   * Allowed values for the <code>carrier</code> property.
   * @enum {String}
   * @readonly
   */
  exports.CarrierEnum = {
    /**
     * value: "Full"
     * @const
     */
    full: "Full",

    /**
     * value: "View"
     * @const
     */
    view: "View",

    /**
     * value: "Modify"
     * @const
     */
    modify: "Modify",

    /**
     * value: "None"
     * @const
     */
    none: "None",

    /**
     * value: "Deny"
     * @const
     */
    deny: "Deny"
  };

  /**
   * Allowed values for the <code>subGroups</code> property.
   * @enum {String}
   * @readonly
   */
  exports.SubGroupsEnum = {
    /**
     * value: "Full"
     * @const
     */
    full: "Full",

    /**
     * value: "View"
     * @const
     */
    view: "View",

    /**
     * value: "Modify"
     * @const
     */
    modify: "Modify",

    /**
     * value: "None"
     * @const
     */
    none: "None",

    /**
     * value: "Deny"
     * @const
     */
    deny: "Deny"
  };

  /**
   * Allowed values for the <code>membership</code> property.
   * @enum {String}
   * @readonly
   */
  exports.MembershipEnum = {
    /**
     * value: "Full"
     * @const
     */
    full: "Full",

    /**
     * value: "View"
     * @const
     */
    view: "View",

    /**
     * value: "Modify"
     * @const
     */
    modify: "Modify",

    /**
     * value: "None"
     * @const
     */
    none: "None",

    /**
     * value: "Deny"
     * @const
     */
    deny: "Deny"
  };

  /**
   * Allowed values for the <code>education</code> property.
   * @enum {String}
   * @readonly
   */
  exports.EducationEnum = {
    /**
     * value: "Full"
     * @const
     */
    full: "Full",

    /**
     * value: "View"
     * @const
     */
    view: "View",

    /**
     * value: "Modify"
     * @const
     */
    modify: "Modify",

    /**
     * value: "None"
     * @const
     */
    none: "None",

    /**
     * value: "Deny"
     * @const
     */
    deny: "Deny"
  };

  /**
   * Allowed values for the <code>applications</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ApplicationsEnum = {
    /**
     * value: "Full"
     * @const
     */
    full: "Full",

    /**
     * value: "View"
     * @const
     */
    view: "View",

    /**
     * value: "Modify"
     * @const
     */
    modify: "Modify",

    /**
     * value: "None"
     * @const
     */
    none: "None",

    /**
     * value: "Deny"
     * @const
     */
    deny: "Deny"
  };

  /**
   * Allowed values for the <code>fundPayments</code> property.
   * @enum {String}
   * @readonly
   */
  exports.FundPaymentsEnum = {
    /**
     * value: "Full"
     * @const
     */
    full: "Full",

    /**
     * value: "View"
     * @const
     */
    view: "View",

    /**
     * value: "Modify"
     * @const
     */
    modify: "Modify",

    /**
     * value: "None"
     * @const
     */
    none: "None",

    /**
     * value: "Deny"
     * @const
     */
    deny: "Deny"
  };

  /**
   * Allowed values for the <code>statistics</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StatisticsEnum = {
    /**
     * value: "Full"
     * @const
     */
    full: "Full",

    /**
     * value: "View"
     * @const
     */
    view: "View",

    /**
     * value: "Modify"
     * @const
     */
    modify: "Modify",

    /**
     * value: "None"
     * @const
     */
    none: "None",

    /**
     * value: "Deny"
     * @const
     */
    deny: "Deny"
  };

  /**
   * Allowed values for the <code>resume</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ResumeEnum = {
    /**
     * value: "Full"
     * @const
     */
    full: "Full",

    /**
     * value: "View"
     * @const
     */
    view: "View",

    /**
     * value: "Modify"
     * @const
     */
    modify: "Modify",

    /**
     * value: "None"
     * @const
     */
    none: "None",

    /**
     * value: "Deny"
     * @const
     */
    deny: "Deny"
  };

  /**
   * Allowed values for the <code>settings</code> property.
   * @enum {String}
   * @readonly
   */
  exports.SettingsEnum = {
    /**
     * value: "Full"
     * @const
     */
    full: "Full",

    /**
     * value: "View"
     * @const
     */
    view: "View",

    /**
     * value: "Modify"
     * @const
     */
    modify: "Modify",

    /**
     * value: "None"
     * @const
     */
    none: "None",

    /**
     * value: "Deny"
     * @const
     */
    deny: "Deny"
  };

  /**
   * Allowed values for the <code>enabled</code> property.
   * @enum {String}
   * @readonly
   */
  exports.EnabledEnum = {
    /**
     * value: "Enabled"
     * @const
     */
    enabled: "Enabled",

    /**
     * value: "Disabled"
     * @const
     */
    disabled: "Disabled",

    /**
     * value: "Blocked"
     * @const
     */
    blocked: "Blocked"
  };
  return exports;
}));
