/*
 * dkPlus API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.43
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.DkPlusApi) {
      root.DkPlusApi = {};
    }
    root.DkPlusApi.DkCloudDataModelPermissionCustomerPermissionModel = factory(root.DkPlusApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The DkCloudDataModelPermissionCustomerPermissionModel model module.
   * @module model/DkCloudDataModelPermissionCustomerPermissionModel
   * @version v1
   */

  /**
   * Constructs a new <code>DkCloudDataModelPermissionCustomerPermissionModel</code>.
   * @alias module:model/DkCloudDataModelPermissionCustomerPermissionModel
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>DkCloudDataModelPermissionCustomerPermissionModel</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DkCloudDataModelPermissionCustomerPermissionModel} obj Optional instance to populate.
   * @return {module:model/DkCloudDataModelPermissionCustomerPermissionModel} The populated <code>DkCloudDataModelPermissionCustomerPermissionModel</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('Customers'))
        obj.customers = ApiClient.convertToType(data['Customers'], 'String');
      if (data.hasOwnProperty('CustomerDashboard'))
        obj.customerDashboard = ApiClient.convertToType(data['CustomerDashboard'], 'String');
      if (data.hasOwnProperty('Groups'))
        obj.groups = ApiClient.convertToType(data['Groups'], 'String');
      if (data.hasOwnProperty('Invoices'))
        obj.invoices = ApiClient.convertToType(data['Invoices'], 'String');
      if (data.hasOwnProperty('Projects'))
        obj.projects = ApiClient.convertToType(data['Projects'], 'String');
      if (data.hasOwnProperty('Contacts'))
        obj.contacts = ApiClient.convertToType(data['Contacts'], 'String');
      if (data.hasOwnProperty('ItemReccivers'))
        obj.itemReccivers = ApiClient.convertToType(data['ItemReccivers'], 'String');
      if (data.hasOwnProperty('Memoes'))
        obj.memoes = ApiClient.convertToType(data['Memoes'], 'String');
      if (data.hasOwnProperty('Attributes'))
        obj.attributes = ApiClient.convertToType(data['Attributes'], 'String');
      if (data.hasOwnProperty('Attachments'))
        obj.attachments = ApiClient.convertToType(data['Attachments'], 'String');
      if (data.hasOwnProperty('Modifications'))
        obj.modifications = ApiClient.convertToType(data['Modifications'], 'String');
      if (data.hasOwnProperty('Settings'))
        obj.settings = ApiClient.convertToType(data['Settings'], 'String');
      if (data.hasOwnProperty('Transactions'))
        obj.transactions = ApiClient.convertToType(data['Transactions'], 'String');
      if (data.hasOwnProperty('Enabled'))
        obj.enabled = ApiClient.convertToType(data['Enabled'], 'String');
    }
    return obj;
  }

  /**
   * @member {module:model/DkCloudDataModelPermissionCustomerPermissionModel.CustomersEnum} customers
   */
  exports.prototype.customers = undefined;

  /**
   * @member {module:model/DkCloudDataModelPermissionCustomerPermissionModel.CustomerDashboardEnum} customerDashboard
   */
  exports.prototype.customerDashboard = undefined;

  /**
   * @member {module:model/DkCloudDataModelPermissionCustomerPermissionModel.GroupsEnum} groups
   */
  exports.prototype.groups = undefined;

  /**
   * @member {module:model/DkCloudDataModelPermissionCustomerPermissionModel.InvoicesEnum} invoices
   */
  exports.prototype.invoices = undefined;

  /**
   * @member {module:model/DkCloudDataModelPermissionCustomerPermissionModel.ProjectsEnum} projects
   */
  exports.prototype.projects = undefined;

  /**
   * @member {module:model/DkCloudDataModelPermissionCustomerPermissionModel.ContactsEnum} contacts
   */
  exports.prototype.contacts = undefined;

  /**
   * @member {module:model/DkCloudDataModelPermissionCustomerPermissionModel.ItemRecciversEnum} itemReccivers
   */
  exports.prototype.itemReccivers = undefined;

  /**
   * @member {module:model/DkCloudDataModelPermissionCustomerPermissionModel.MemoesEnum} memoes
   */
  exports.prototype.memoes = undefined;

  /**
   * @member {module:model/DkCloudDataModelPermissionCustomerPermissionModel.AttributesEnum} attributes
   */
  exports.prototype.attributes = undefined;

  /**
   * @member {module:model/DkCloudDataModelPermissionCustomerPermissionModel.AttachmentsEnum} attachments
   */
  exports.prototype.attachments = undefined;

  /**
   * @member {module:model/DkCloudDataModelPermissionCustomerPermissionModel.ModificationsEnum} modifications
   */
  exports.prototype.modifications = undefined;

  /**
   * @member {module:model/DkCloudDataModelPermissionCustomerPermissionModel.SettingsEnum} settings
   */
  exports.prototype.settings = undefined;

  /**
   * @member {module:model/DkCloudDataModelPermissionCustomerPermissionModel.TransactionsEnum} transactions
   */
  exports.prototype.transactions = undefined;

  /**
   * @member {module:model/DkCloudDataModelPermissionCustomerPermissionModel.EnabledEnum} enabled
   */
  exports.prototype.enabled = undefined;



  /**
   * Allowed values for the <code>customers</code> property.
   * @enum {String}
   * @readonly
   */
  exports.CustomersEnum = {
    /**
     * value: "Full"
     * @const
     */
    full: "Full",

    /**
     * value: "View"
     * @const
     */
    view: "View",

    /**
     * value: "Modify"
     * @const
     */
    modify: "Modify",

    /**
     * value: "None"
     * @const
     */
    none: "None",

    /**
     * value: "Deny"
     * @const
     */
    deny: "Deny"
  };

  /**
   * Allowed values for the <code>customerDashboard</code> property.
   * @enum {String}
   * @readonly
   */
  exports.CustomerDashboardEnum = {
    /**
     * value: "Full"
     * @const
     */
    full: "Full",

    /**
     * value: "View"
     * @const
     */
    view: "View",

    /**
     * value: "Modify"
     * @const
     */
    modify: "Modify",

    /**
     * value: "None"
     * @const
     */
    none: "None",

    /**
     * value: "Deny"
     * @const
     */
    deny: "Deny"
  };

  /**
   * Allowed values for the <code>groups</code> property.
   * @enum {String}
   * @readonly
   */
  exports.GroupsEnum = {
    /**
     * value: "Full"
     * @const
     */
    full: "Full",

    /**
     * value: "View"
     * @const
     */
    view: "View",

    /**
     * value: "Modify"
     * @const
     */
    modify: "Modify",

    /**
     * value: "None"
     * @const
     */
    none: "None",

    /**
     * value: "Deny"
     * @const
     */
    deny: "Deny"
  };

  /**
   * Allowed values for the <code>invoices</code> property.
   * @enum {String}
   * @readonly
   */
  exports.InvoicesEnum = {
    /**
     * value: "Full"
     * @const
     */
    full: "Full",

    /**
     * value: "View"
     * @const
     */
    view: "View",

    /**
     * value: "Modify"
     * @const
     */
    modify: "Modify",

    /**
     * value: "None"
     * @const
     */
    none: "None",

    /**
     * value: "Deny"
     * @const
     */
    deny: "Deny"
  };

  /**
   * Allowed values for the <code>projects</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ProjectsEnum = {
    /**
     * value: "Full"
     * @const
     */
    full: "Full",

    /**
     * value: "View"
     * @const
     */
    view: "View",

    /**
     * value: "Modify"
     * @const
     */
    modify: "Modify",

    /**
     * value: "None"
     * @const
     */
    none: "None",

    /**
     * value: "Deny"
     * @const
     */
    deny: "Deny"
  };

  /**
   * Allowed values for the <code>contacts</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ContactsEnum = {
    /**
     * value: "Full"
     * @const
     */
    full: "Full",

    /**
     * value: "View"
     * @const
     */
    view: "View",

    /**
     * value: "Modify"
     * @const
     */
    modify: "Modify",

    /**
     * value: "None"
     * @const
     */
    none: "None",

    /**
     * value: "Deny"
     * @const
     */
    deny: "Deny"
  };

  /**
   * Allowed values for the <code>itemReccivers</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ItemRecciversEnum = {
    /**
     * value: "Full"
     * @const
     */
    full: "Full",

    /**
     * value: "View"
     * @const
     */
    view: "View",

    /**
     * value: "Modify"
     * @const
     */
    modify: "Modify",

    /**
     * value: "None"
     * @const
     */
    none: "None",

    /**
     * value: "Deny"
     * @const
     */
    deny: "Deny"
  };

  /**
   * Allowed values for the <code>memoes</code> property.
   * @enum {String}
   * @readonly
   */
  exports.MemoesEnum = {
    /**
     * value: "Full"
     * @const
     */
    full: "Full",

    /**
     * value: "View"
     * @const
     */
    view: "View",

    /**
     * value: "Modify"
     * @const
     */
    modify: "Modify",

    /**
     * value: "None"
     * @const
     */
    none: "None",

    /**
     * value: "Deny"
     * @const
     */
    deny: "Deny"
  };

  /**
   * Allowed values for the <code>attributes</code> property.
   * @enum {String}
   * @readonly
   */
  exports.AttributesEnum = {
    /**
     * value: "Full"
     * @const
     */
    full: "Full",

    /**
     * value: "View"
     * @const
     */
    view: "View",

    /**
     * value: "Modify"
     * @const
     */
    modify: "Modify",

    /**
     * value: "None"
     * @const
     */
    none: "None",

    /**
     * value: "Deny"
     * @const
     */
    deny: "Deny"
  };

  /**
   * Allowed values for the <code>attachments</code> property.
   * @enum {String}
   * @readonly
   */
  exports.AttachmentsEnum = {
    /**
     * value: "Full"
     * @const
     */
    full: "Full",

    /**
     * value: "View"
     * @const
     */
    view: "View",

    /**
     * value: "Modify"
     * @const
     */
    modify: "Modify",

    /**
     * value: "None"
     * @const
     */
    none: "None",

    /**
     * value: "Deny"
     * @const
     */
    deny: "Deny"
  };

  /**
   * Allowed values for the <code>modifications</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ModificationsEnum = {
    /**
     * value: "Full"
     * @const
     */
    full: "Full",

    /**
     * value: "View"
     * @const
     */
    view: "View",

    /**
     * value: "Modify"
     * @const
     */
    modify: "Modify",

    /**
     * value: "None"
     * @const
     */
    none: "None",

    /**
     * value: "Deny"
     * @const
     */
    deny: "Deny"
  };

  /**
   * Allowed values for the <code>settings</code> property.
   * @enum {String}
   * @readonly
   */
  exports.SettingsEnum = {
    /**
     * value: "Full"
     * @const
     */
    full: "Full",

    /**
     * value: "View"
     * @const
     */
    view: "View",

    /**
     * value: "Modify"
     * @const
     */
    modify: "Modify",

    /**
     * value: "None"
     * @const
     */
    none: "None",

    /**
     * value: "Deny"
     * @const
     */
    deny: "Deny"
  };

  /**
   * Allowed values for the <code>transactions</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TransactionsEnum = {
    /**
     * value: "Full"
     * @const
     */
    full: "Full",

    /**
     * value: "View"
     * @const
     */
    view: "View",

    /**
     * value: "Modify"
     * @const
     */
    modify: "Modify",

    /**
     * value: "None"
     * @const
     */
    none: "None",

    /**
     * value: "Deny"
     * @const
     */
    deny: "Deny"
  };

  /**
   * Allowed values for the <code>enabled</code> property.
   * @enum {String}
   * @readonly
   */
  exports.EnabledEnum = {
    /**
     * value: "Enabled"
     * @const
     */
    enabled: "Enabled",

    /**
     * value: "Disabled"
     * @const
     */
    disabled: "Disabled",

    /**
     * value: "Blocked"
     * @const
     */
    blocked: "Blocked"
  };
  return exports;
}));
