/*
 * dkPlus API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.43
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/VLinkDkSoftwareDkSOAPTJobPhaseLink', 'model/VLinkDkSoftwareDkSOAPTJobTaskLink'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./VLinkDkSoftwareDkSOAPTJobPhaseLink'), require('./VLinkDkSoftwareDkSOAPTJobTaskLink'));
  } else {
    // Browser globals (root is window)
    if (!root.DkPlusApi) {
      root.DkPlusApi = {};
    }
    root.DkPlusApi.VLinkDkSoftwareDkSOAPTJob = factory(root.DkPlusApi.ApiClient, root.DkPlusApi.VLinkDkSoftwareDkSOAPTJobPhaseLink, root.DkPlusApi.VLinkDkSoftwareDkSOAPTJobTaskLink);
  }
}(this, function(ApiClient, VLinkDkSoftwareDkSOAPTJobPhaseLink, VLinkDkSoftwareDkSOAPTJobTaskLink) {
  'use strict';

  /**
   * The VLinkDkSoftwareDkSOAPTJob model module.
   * @module model/VLinkDkSoftwareDkSOAPTJob
   * @version v1
   */

  /**
   * Constructs a new <code>VLinkDkSoftwareDkSOAPTJob</code>.
   * @alias module:model/VLinkDkSoftwareDkSOAPTJob
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>VLinkDkSoftwareDkSOAPTJob</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/VLinkDkSoftwareDkSOAPTJob} obj Optional instance to populate.
   * @return {module:model/VLinkDkSoftwareDkSOAPTJob} The populated <code>VLinkDkSoftwareDkSOAPTJob</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('RecordID'))
        obj.recordID = ApiClient.convertToType(data['RecordID'], 'Number');
      if (data.hasOwnProperty('Number'))
        obj._number = ApiClient.convertToType(data['Number'], 'String');
      if (data.hasOwnProperty('Name'))
        obj.name = ApiClient.convertToType(data['Name'], 'String');
      if (data.hasOwnProperty('Group'))
        obj.group = ApiClient.convertToType(data['Group'], 'String');
      if (data.hasOwnProperty('MasterJobNumber'))
        obj.masterJobNumber = ApiClient.convertToType(data['MasterJobNumber'], 'String');
      if (data.hasOwnProperty('QuotationNumber'))
        obj.quotationNumber = ApiClient.convertToType(data['QuotationNumber'], 'Number');
      if (data.hasOwnProperty('CustomerToBill'))
        obj.customerToBill = ApiClient.convertToType(data['CustomerToBill'], 'String');
      if (data.hasOwnProperty('CustomerNameToBill'))
        obj.customerNameToBill = ApiClient.convertToType(data['CustomerNameToBill'], 'String');
      if (data.hasOwnProperty('CustomerToRecieve'))
        obj.customerToRecieve = ApiClient.convertToType(data['CustomerToRecieve'], 'String');
      if (data.hasOwnProperty('Founder'))
        obj.founder = ApiClient.convertToType(data['Founder'], 'String');
      if (data.hasOwnProperty('Owner'))
        obj.owner = ApiClient.convertToType(data['Owner'], 'String');
      if (data.hasOwnProperty('Supervisor'))
        obj.supervisor = ApiClient.convertToType(data['Supervisor'], 'String');
      if (data.hasOwnProperty('Worker'))
        obj.worker = ApiClient.convertToType(data['Worker'], 'String');
      if (data.hasOwnProperty('Dim1'))
        obj.dim1 = ApiClient.convertToType(data['Dim1'], 'String');
      if (data.hasOwnProperty('Dim2'))
        obj.dim2 = ApiClient.convertToType(data['Dim2'], 'String');
      if (data.hasOwnProperty('Dim3'))
        obj.dim3 = ApiClient.convertToType(data['Dim3'], 'String');
      if (data.hasOwnProperty('Dim1Required'))
        obj.dim1Required = ApiClient.convertToType(data['Dim1Required'], 'Boolean');
      if (data.hasOwnProperty('Dim2Required'))
        obj.dim2Required = ApiClient.convertToType(data['Dim2Required'], 'Boolean');
      if (data.hasOwnProperty('Dim3Required'))
        obj.dim3Required = ApiClient.convertToType(data['Dim3Required'], 'Boolean');
      if (data.hasOwnProperty('FoundingDate'))
        obj.foundingDate = ApiClient.convertToType(data['FoundingDate'], 'Date');
      if (data.hasOwnProperty('EstimatedBeginingDate'))
        obj.estimatedBeginingDate = ApiClient.convertToType(data['EstimatedBeginingDate'], 'Date');
      if (data.hasOwnProperty('EstimatedFinishDate'))
        obj.estimatedFinishDate = ApiClient.convertToType(data['EstimatedFinishDate'], 'Date');
      if (data.hasOwnProperty('ActualBeginingDate'))
        obj.actualBeginingDate = ApiClient.convertToType(data['ActualBeginingDate'], 'Date');
      if (data.hasOwnProperty('ActualFinishDate'))
        obj.actualFinishDate = ApiClient.convertToType(data['ActualFinishDate'], 'Date');
      if (data.hasOwnProperty('OptimistDate'))
        obj.optimistDate = ApiClient.convertToType(data['OptimistDate'], 'Date');
      if (data.hasOwnProperty('PessimistDate'))
        obj.pessimistDate = ApiClient.convertToType(data['PessimistDate'], 'Date');
      if (data.hasOwnProperty('JobType'))
        obj.jobType = ApiClient.convertToType(data['JobType'], 'String');
      if (data.hasOwnProperty('JobStatus'))
        obj.jobStatus = ApiClient.convertToType(data['JobStatus'], 'String');
      if (data.hasOwnProperty('JobBillingMode'))
        obj.jobBillingMode = ApiClient.convertToType(data['JobBillingMode'], 'String');
      if (data.hasOwnProperty('PhaseId'))
        obj.phaseId = ApiClient.convertToType(data['PhaseId'], 'String');
      if (data.hasOwnProperty('PhaseRequired'))
        obj.phaseRequired = ApiClient.convertToType(data['PhaseRequired'], 'Boolean');
      if (data.hasOwnProperty('TaskId'))
        obj.taskId = ApiClient.convertToType(data['TaskId'], 'String');
      if (data.hasOwnProperty('TaskRequired'))
        obj.taskRequired = ApiClient.convertToType(data['TaskRequired'], 'Boolean');
      if (data.hasOwnProperty('ForeignName'))
        obj.foreignName = ApiClient.convertToType(data['ForeignName'], 'String');
      if (data.hasOwnProperty('JobContactName'))
        obj.jobContactName = ApiClient.convertToType(data['JobContactName'], 'String');
      if (data.hasOwnProperty('QuotationAmount'))
        obj.quotationAmount = ApiClient.convertToType(data['QuotationAmount'], 'Number');
      if (data.hasOwnProperty('Serialnumber'))
        obj.serialnumber = ApiClient.convertToType(data['Serialnumber'], 'String');
      if (data.hasOwnProperty('QuotationAmountWithVAT'))
        obj.quotationAmountWithVAT = ApiClient.convertToType(data['QuotationAmountWithVAT'], 'Boolean');
      if (data.hasOwnProperty('LedgerCode'))
        obj.ledgerCode = ApiClient.convertToType(data['LedgerCode'], 'String');
      if (data.hasOwnProperty('DiscountType'))
        obj.discountType = ApiClient.convertToType(data['DiscountType'], 'String');
      if (data.hasOwnProperty('JobDiscountPercent'))
        obj.jobDiscountPercent = ApiClient.convertToType(data['JobDiscountPercent'], 'Number');
      if (data.hasOwnProperty('DiscountOfTime'))
        obj.discountOfTime = ApiClient.convertToType(data['DiscountOfTime'], 'Boolean');
      if (data.hasOwnProperty('DiscountOfDriveTime'))
        obj.discountOfDriveTime = ApiClient.convertToType(data['DiscountOfDriveTime'], 'Boolean');
      if (data.hasOwnProperty('DiscountOfCost'))
        obj.discountOfCost = ApiClient.convertToType(data['DiscountOfCost'], 'Boolean');
      if (data.hasOwnProperty('ForeignPriceForWork'))
        obj.foreignPriceForWork = ApiClient.convertToType(data['ForeignPriceForWork'], 'Number');
      if (data.hasOwnProperty('SkipTaxOnInvoice'))
        obj.skipTaxOnInvoice = ApiClient.convertToType(data['SkipTaxOnInvoice'], 'Boolean');
      if (data.hasOwnProperty('QuotationCurrencyCode'))
        obj.quotationCurrencyCode = ApiClient.convertToType(data['QuotationCurrencyCode'], 'String');
      if (data.hasOwnProperty('QuotationWorkingHours'))
        obj.quotationWorkingHours = ApiClient.convertToType(data['QuotationWorkingHours'], 'Number');
      if (data.hasOwnProperty('QuotationWorkingAmount'))
        obj.quotationWorkingAmount = ApiClient.convertToType(data['QuotationWorkingAmount'], 'Number');
      if (data.hasOwnProperty('QuotationCostAmount'))
        obj.quotationCostAmount = ApiClient.convertToType(data['QuotationCostAmount'], 'Number');
      if (data.hasOwnProperty('QuotationLicenceAmount'))
        obj.quotationLicenceAmount = ApiClient.convertToType(data['QuotationLicenceAmount'], 'Number');
      if (data.hasOwnProperty('Modified'))
        obj.modified = ApiClient.convertToType(data['Modified'], 'Date');
      if (data.hasOwnProperty('JobDescription'))
        obj.jobDescription = ApiClient.convertToType(data['JobDescription'], 'String');
      if (data.hasOwnProperty('LinkedPhases'))
        obj.linkedPhases = ApiClient.convertToType(data['LinkedPhases'], [VLinkDkSoftwareDkSOAPTJobPhaseLink]);
      if (data.hasOwnProperty('LinkedTasks'))
        obj.linkedTasks = ApiClient.convertToType(data['LinkedTasks'], [VLinkDkSoftwareDkSOAPTJobTaskLink]);
    }
    return obj;
  }

  /**
   * @member {Number} recordID
   */
  exports.prototype.recordID = undefined;

  /**
   * @member {String} _number
   */
  exports.prototype._number = undefined;

  /**
   * @member {String} name
   */
  exports.prototype.name = undefined;

  /**
   * @member {String} group
   */
  exports.prototype.group = undefined;

  /**
   * @member {String} masterJobNumber
   */
  exports.prototype.masterJobNumber = undefined;

  /**
   * @member {Number} quotationNumber
   */
  exports.prototype.quotationNumber = undefined;

  /**
   * @member {String} customerToBill
   */
  exports.prototype.customerToBill = undefined;

  /**
   * @member {String} customerNameToBill
   */
  exports.prototype.customerNameToBill = undefined;

  /**
   * @member {String} customerToRecieve
   */
  exports.prototype.customerToRecieve = undefined;

  /**
   * @member {String} founder
   */
  exports.prototype.founder = undefined;

  /**
   * @member {String} owner
   */
  exports.prototype.owner = undefined;

  /**
   * @member {String} supervisor
   */
  exports.prototype.supervisor = undefined;

  /**
   * @member {String} worker
   */
  exports.prototype.worker = undefined;

  /**
   * @member {String} dim1
   */
  exports.prototype.dim1 = undefined;

  /**
   * @member {String} dim2
   */
  exports.prototype.dim2 = undefined;

  /**
   * @member {String} dim3
   */
  exports.prototype.dim3 = undefined;

  /**
   * @member {Boolean} dim1Required
   */
  exports.prototype.dim1Required = undefined;

  /**
   * @member {Boolean} dim2Required
   */
  exports.prototype.dim2Required = undefined;

  /**
   * @member {Boolean} dim3Required
   */
  exports.prototype.dim3Required = undefined;

  /**
   * @member {Date} foundingDate
   */
  exports.prototype.foundingDate = undefined;

  /**
   * @member {Date} estimatedBeginingDate
   */
  exports.prototype.estimatedBeginingDate = undefined;

  /**
   * @member {Date} estimatedFinishDate
   */
  exports.prototype.estimatedFinishDate = undefined;

  /**
   * @member {Date} actualBeginingDate
   */
  exports.prototype.actualBeginingDate = undefined;

  /**
   * @member {Date} actualFinishDate
   */
  exports.prototype.actualFinishDate = undefined;

  /**
   * @member {Date} optimistDate
   */
  exports.prototype.optimistDate = undefined;

  /**
   * @member {Date} pessimistDate
   */
  exports.prototype.pessimistDate = undefined;

  /**
   * @member {module:model/VLinkDkSoftwareDkSOAPTJob.JobTypeEnum} jobType
   */
  exports.prototype.jobType = undefined;

  /**
   * @member {module:model/VLinkDkSoftwareDkSOAPTJob.JobStatusEnum} jobStatus
   */
  exports.prototype.jobStatus = undefined;

  /**
   * @member {module:model/VLinkDkSoftwareDkSOAPTJob.JobBillingModeEnum} jobBillingMode
   */
  exports.prototype.jobBillingMode = undefined;

  /**
   * @member {String} phaseId
   */
  exports.prototype.phaseId = undefined;

  /**
   * @member {Boolean} phaseRequired
   */
  exports.prototype.phaseRequired = undefined;

  /**
   * @member {String} taskId
   */
  exports.prototype.taskId = undefined;

  /**
   * @member {Boolean} taskRequired
   */
  exports.prototype.taskRequired = undefined;

  /**
   * @member {String} foreignName
   */
  exports.prototype.foreignName = undefined;

  /**
   * @member {String} jobContactName
   */
  exports.prototype.jobContactName = undefined;

  /**
   * @member {Number} quotationAmount
   */
  exports.prototype.quotationAmount = undefined;

  /**
   * @member {String} serialnumber
   */
  exports.prototype.serialnumber = undefined;

  /**
   * @member {Boolean} quotationAmountWithVAT
   */
  exports.prototype.quotationAmountWithVAT = undefined;

  /**
   * @member {String} ledgerCode
   */
  exports.prototype.ledgerCode = undefined;

  /**
   * @member {module:model/VLinkDkSoftwareDkSOAPTJob.DiscountTypeEnum} discountType
   */
  exports.prototype.discountType = undefined;

  /**
   * @member {Number} jobDiscountPercent
   */
  exports.prototype.jobDiscountPercent = undefined;

  /**
   * @member {Boolean} discountOfTime
   */
  exports.prototype.discountOfTime = undefined;

  /**
   * @member {Boolean} discountOfDriveTime
   */
  exports.prototype.discountOfDriveTime = undefined;

  /**
   * @member {Boolean} discountOfCost
   */
  exports.prototype.discountOfCost = undefined;

  /**
   * @member {Number} foreignPriceForWork
   */
  exports.prototype.foreignPriceForWork = undefined;

  /**
   * @member {Boolean} skipTaxOnInvoice
   */
  exports.prototype.skipTaxOnInvoice = undefined;

  /**
   * @member {String} quotationCurrencyCode
   */
  exports.prototype.quotationCurrencyCode = undefined;

  /**
   * @member {Number} quotationWorkingHours
   */
  exports.prototype.quotationWorkingHours = undefined;

  /**
   * @member {Number} quotationWorkingAmount
   */
  exports.prototype.quotationWorkingAmount = undefined;

  /**
   * @member {Number} quotationCostAmount
   */
  exports.prototype.quotationCostAmount = undefined;

  /**
   * @member {Number} quotationLicenceAmount
   */
  exports.prototype.quotationLicenceAmount = undefined;

  /**
   * @member {Date} modified
   */
  exports.prototype.modified = undefined;

  /**
   * @member {String} jobDescription
   */
  exports.prototype.jobDescription = undefined;

  /**
   * @member {Array.<module:model/VLinkDkSoftwareDkSOAPTJobPhaseLink>} linkedPhases
   */
  exports.prototype.linkedPhases = undefined;

  /**
   * @member {Array.<module:model/VLinkDkSoftwareDkSOAPTJobTaskLink>} linkedTasks
   */
  exports.prototype.linkedTasks = undefined;



  /**
   * Allowed values for the <code>jobType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.JobTypeEnum = {
    /**
     * value: "_cbTimeJob"
     * @const
     */
    cbTimeJob: "_cbTimeJob",

    /**
     * value: "_cbServiceJob"
     * @const
     */
    cbServiceJob: "_cbServiceJob",

    /**
     * value: "_cbQuotationJob"
     * @const
     */
    cbQuotationJob: "_cbQuotationJob",

    /**
     * value: "_cbInHouseJob"
     * @const
     */
    cbInHouseJob: "_cbInHouseJob"
  };

  /**
   * Allowed values for the <code>jobStatus</code> property.
   * @enum {String}
   * @readonly
   */
  exports.JobStatusEnum = {
    /**
     * value: "_cbJobNotStarted"
     * @const
     */
    cbJobNotStarted: "_cbJobNotStarted",

    /**
     * value: "_cbJobInProgress"
     * @const
     */
    cbJobInProgress: "_cbJobInProgress",

    /**
     * value: "_cbJobInWaiting"
     * @const
     */
    cbJobInWaiting: "_cbJobInWaiting",

    /**
     * value: "_cbJobFinished"
     * @const
     */
    cbJobFinished: "_cbJobFinished",

    /**
     * value: "_cbJobReady"
     * @const
     */
    cbJobReady: "_cbJobReady"
  };

  /**
   * Allowed values for the <code>jobBillingMode</code> property.
   * @enum {String}
   * @readonly
   */
  exports.JobBillingModeEnum = {
    /**
     * value: "_cbBillMonthly"
     * @const
     */
    cbBillMonthly: "_cbBillMonthly",

    /**
     * value: "_cbBillFinished"
     * @const
     */
    cbBillFinished: "_cbBillFinished",

    /**
     * value: "_cbBillIrregulary"
     * @const
     */
    cbBillIrregulary: "_cbBillIrregulary",

    /**
     * value: "_cbNoBill"
     * @const
     */
    cbNoBill: "_cbNoBill",

    /**
     * value: "_cbBillWarranty"
     * @const
     */
    cbBillWarranty: "_cbBillWarranty"
  };

  /**
   * Allowed values for the <code>discountType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.DiscountTypeEnum = {
    /**
     * value: "_cbPjCustomerDiscount"
     * @const
     */
    cbPjCustomerDiscount: "_cbPjCustomerDiscount",

    /**
     * value: "_cbPjJobDiscount"
     * @const
     */
    cbPjJobDiscount: "_cbPjJobDiscount",

    /**
     * value: "_cbPjNoDiscount"
     * @const
     */
    cbPjNoDiscount: "_cbPjNoDiscount"
  };
  return exports;
}));
