/*
 * dkPlus API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.43
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/DkCloudDataModelCustomersPaymentModeModel', 'model/DkCloudDataModelCustomersPaymentTermModel', 'model/DkCloudDataModelSalesSalesPaymentMode'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/DkCloudDataModelCustomersPaymentModeModel'), require('../model/DkCloudDataModelCustomersPaymentTermModel'), require('../model/DkCloudDataModelSalesSalesPaymentMode'));
  } else {
    // Browser globals (root is window)
    if (!root.DkPlusApi) {
      root.DkPlusApi = {};
    }
    root.DkPlusApi.PaymentApi = factory(root.DkPlusApi.ApiClient, root.DkPlusApi.DkCloudDataModelCustomersPaymentModeModel, root.DkPlusApi.DkCloudDataModelCustomersPaymentTermModel, root.DkPlusApi.DkCloudDataModelSalesSalesPaymentMode);
  }
}(this, function(ApiClient, DkCloudDataModelCustomersPaymentModeModel, DkCloudDataModelCustomersPaymentTermModel, DkCloudDataModelSalesSalesPaymentMode) {
  'use strict';

  /**
   * Payment service.
   * @module api/PaymentApi
   * @version v1
   */

  /**
   * Constructs a new PaymentApi. 
   * @alias module:api/PaymentApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the paymentModeGetPaymentMode operation.
     * @callback module:api/PaymentApi~paymentModeGetPaymentModeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DkCloudDataModelCustomersPaymentModeModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a payment mode
     * @param {String} _number Payment Mode Number
     * @param {module:api/PaymentApi~paymentModeGetPaymentModeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DkCloudDataModelCustomersPaymentModeModel}
     */
    this.paymentModeGetPaymentMode = function(_number, callback) {
      var postBody = null;

      // verify the required parameter '_number' is set
      if (_number === undefined || _number === null) {
        throw new Error("Missing the required parameter '_number' when calling paymentModeGetPaymentMode");
      }


      var pathParams = {
        'number': _number
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = DkCloudDataModelCustomersPaymentModeModel;

      return this.apiClient.callApi(
        '/api/v1/general/payment/mode/{number}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the paymentModeGetPaymentModes operation.
     * @callback module:api/PaymentApi~paymentModeGetPaymentModesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/DkCloudDataModelCustomersPaymentModeModel>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all payment modes
     * @param {module:api/PaymentApi~paymentModeGetPaymentModesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/DkCloudDataModelCustomersPaymentModeModel>}
     */
    this.paymentModeGetPaymentModes = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = [DkCloudDataModelCustomersPaymentModeModel];

      return this.apiClient.callApi(
        '/api/v1/general/payment/mode', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the paymentTermGet operation.
     * @callback module:api/PaymentApi~paymentTermGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/DkCloudDataModelCustomersPaymentTermModel>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all payment terms
     * @param {module:api/PaymentApi~paymentTermGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/DkCloudDataModelCustomersPaymentTermModel>}
     */
    this.paymentTermGet = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = [DkCloudDataModelCustomersPaymentTermModel];

      return this.apiClient.callApi(
        '/api/v1/general/payment/term', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the paymentTermGetInstance operation.
     * @callback module:api/PaymentApi~paymentTermGetInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DkCloudDataModelCustomersPaymentTermModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a payment term
     * @param {String} _number Payment Term Number
     * @param {module:api/PaymentApi~paymentTermGetInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DkCloudDataModelCustomersPaymentTermModel}
     */
    this.paymentTermGetInstance = function(_number, callback) {
      var postBody = null;

      // verify the required parameter '_number' is set
      if (_number === undefined || _number === null) {
        throw new Error("Missing the required parameter '_number' when calling paymentTermGetInstance");
      }


      var pathParams = {
        'number': _number
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = DkCloudDataModelCustomersPaymentTermModel;

      return this.apiClient.callApi(
        '/api/v1/general/payment/term/{number}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the paymentTypeGet operation.
     * @callback module:api/PaymentApi~paymentTypeGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/DkCloudDataModelSalesSalesPaymentMode>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Payment Types
     * @param {module:api/PaymentApi~paymentTypeGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/DkCloudDataModelSalesSalesPaymentMode>}
     */
    this.paymentTypeGet = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = [DkCloudDataModelSalesSalesPaymentMode];

      return this.apiClient.callApi(
        '/api/v1/sales/payment/type', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the paymentTypeGetInstance operation.
     * @callback module:api/PaymentApi~paymentTypeGetInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DkCloudDataModelSalesSalesPaymentMode} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Payment Type
     * @param {Number} id 
     * @param {module:api/PaymentApi~paymentTypeGetInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DkCloudDataModelSalesSalesPaymentMode}
     */
    this.paymentTypeGetInstance = function(id, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling paymentTypeGetInstance");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = DkCloudDataModelSalesSalesPaymentMode;

      return this.apiClient.callApi(
        '/api/v1/sales/payment/type/{id}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
