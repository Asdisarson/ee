/*
 * dkPlus API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.43
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/DkCloudDataModelVendorsInvoiceModel', 'model/DkPlusAPIModelsVendorInvoiceApprovalRequestModel', 'model/DkPlusAPIModelsVendorInvoiceInvoice'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/DkCloudDataModelVendorsInvoiceModel'), require('../model/DkPlusAPIModelsVendorInvoiceApprovalRequestModel'), require('../model/DkPlusAPIModelsVendorInvoiceInvoice'));
  } else {
    // Browser globals (root is window)
    if (!root.DkPlusApi) {
      root.DkPlusApi = {};
    }
    root.DkPlusApi.VendorInvoiceApi = factory(root.DkPlusApi.ApiClient, root.DkPlusApi.DkCloudDataModelVendorsInvoiceModel, root.DkPlusApi.DkPlusAPIModelsVendorInvoiceApprovalRequestModel, root.DkPlusApi.DkPlusAPIModelsVendorInvoiceInvoice);
  }
}(this, function(ApiClient, DkCloudDataModelVendorsInvoiceModel, DkPlusAPIModelsVendorInvoiceApprovalRequestModel, DkPlusAPIModelsVendorInvoiceInvoice) {
  'use strict';

  /**
   * VendorInvoice service.
   * @module api/VendorInvoiceApi
   * @version v1
   */

  /**
   * Constructs a new VendorInvoiceApi. 
   * @alias module:api/VendorInvoiceApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the vendorInvoiceApprovalGetBooked operation.
     * @callback module:api/VendorInvoiceApi~vendorInvoiceApprovalGetBookedCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/DkCloudDataModelVendorsInvoiceModel>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/VendorInvoiceApi~vendorInvoiceApprovalGetBookedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/DkCloudDataModelVendorsInvoiceModel>}
     */
    this.vendorInvoiceApprovalGetBooked = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = [DkCloudDataModelVendorsInvoiceModel];

      return this.apiClient.callApi(
        '/api/v1/vendor/invoice/my/approved', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the vendorInvoiceApprovalGetMyUnApproved operation.
     * @callback module:api/VendorInvoiceApi~vendorInvoiceApprovalGetMyUnApprovedCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/DkCloudDataModelVendorsInvoiceModel>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/VendorInvoiceApi~vendorInvoiceApprovalGetMyUnApprovedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/DkCloudDataModelVendorsInvoiceModel>}
     */
    this.vendorInvoiceApprovalGetMyUnApproved = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = [DkCloudDataModelVendorsInvoiceModel];

      return this.apiClient.callApi(
        '/api/v1/vendor/invoice/my/unapproved', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the vendorInvoiceApprovalUpdateApproval operation.
     * @callback module:api/VendorInvoiceApi~vendorInvoiceApprovalUpdateApprovalCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Number} id 
     * @param {module:model/DkPlusAPIModelsVendorInvoiceApprovalRequestModel} value 
     * @param {module:api/VendorInvoiceApi~vendorInvoiceApprovalUpdateApprovalCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.vendorInvoiceApprovalUpdateApproval = function(id, value, callback) {
      var postBody = value;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling vendorInvoiceApprovalUpdateApproval");
      }

      // verify the required parameter 'value' is set
      if (value === undefined || value === null) {
        throw new Error("Missing the required parameter 'value' when calling vendorInvoiceApprovalUpdateApproval");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json', 'text/json', 'application/xml', 'text/xml', 'application/x-www-form-urlencoded'];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = null;

      return this.apiClient.callApi(
        '/api/v1/vendor/invoice/my/approval/{id}', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the vendorInvoiceCreatedVendorInvoice operation.
     * @callback module:api/VendorInvoiceApi~vendorInvoiceCreatedVendorInvoiceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DkCloudDataModelVendorsInvoiceModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a Vendor Invoice
     * @param {String} _number Vendor Number
     * @param {module:model/DkPlusAPIModelsVendorInvoiceInvoice} value Invoice Model
     * @param {module:api/VendorInvoiceApi~vendorInvoiceCreatedVendorInvoiceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DkCloudDataModelVendorsInvoiceModel}
     */
    this.vendorInvoiceCreatedVendorInvoice = function(_number, value, callback) {
      var postBody = value;

      // verify the required parameter '_number' is set
      if (_number === undefined || _number === null) {
        throw new Error("Missing the required parameter '_number' when calling vendorInvoiceCreatedVendorInvoice");
      }

      // verify the required parameter 'value' is set
      if (value === undefined || value === null) {
        throw new Error("Missing the required parameter 'value' when calling vendorInvoiceCreatedVendorInvoice");
      }


      var pathParams = {
        'number': _number
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json', 'text/json', 'application/xml', 'text/xml', 'application/x-www-form-urlencoded'];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = DkCloudDataModelVendorsInvoiceModel;

      return this.apiClient.callApi(
        '/api/v1/Vendor/{number}/Invoice', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the vendorInvoiceGetProcessedInvoices operation.
     * @callback module:api/VendorInvoiceApi~vendorInvoiceGetProcessedInvoicesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/DkCloudDataModelVendorsInvoiceModel>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Booked Invoices
     * @param {Number} page Page Number
     * @param {Number} count number on page
     * @param {module:api/VendorInvoiceApi~vendorInvoiceGetProcessedInvoicesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/DkCloudDataModelVendorsInvoiceModel>}
     */
    this.vendorInvoiceGetProcessedInvoices = function(page, count, callback) {
      var postBody = null;

      // verify the required parameter 'page' is set
      if (page === undefined || page === null) {
        throw new Error("Missing the required parameter 'page' when calling vendorInvoiceGetProcessedInvoices");
      }

      // verify the required parameter 'count' is set
      if (count === undefined || count === null) {
        throw new Error("Missing the required parameter 'count' when calling vendorInvoiceGetProcessedInvoices");
      }


      var pathParams = {
        'page': page,
        'count': count
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = [DkCloudDataModelVendorsInvoiceModel];

      return this.apiClient.callApi(
        '/api/v1/vendor/invoice/processed/page/{page}/{count}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the vendorInvoiceGetVendorInvoice operation.
     * @callback module:api/VendorInvoiceApi~vendorInvoiceGetVendorInvoiceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DkCloudDataModelVendorsInvoiceModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get vendor invoice
     * @param {Number} id 
     * @param {module:api/VendorInvoiceApi~vendorInvoiceGetVendorInvoiceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DkCloudDataModelVendorsInvoiceModel}
     */
    this.vendorInvoiceGetVendorInvoice = function(id, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling vendorInvoiceGetVendorInvoice");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = DkCloudDataModelVendorsInvoiceModel;

      return this.apiClient.callApi(
        '/api/v1/vendor/invoice/processed/page/{id}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the vendorInvoiceGetVendorInvoiceAttachment operation.
     * @callback module:api/VendorInvoiceApi~vendorInvoiceGetVendorInvoiceAttachmentCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Vendor Invoice Attachments
     * @param {Number} id 
     * @param {module:api/VendorInvoiceApi~vendorInvoiceGetVendorInvoiceAttachmentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    this.vendorInvoiceGetVendorInvoiceAttachment = function(id, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling vendorInvoiceGetVendorInvoiceAttachment");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = Object;

      return this.apiClient.callApi(
        '/api/v1/Vendor/Invoice/{id}/attachment', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the vendorInvoiceUnProcessedGetAttachment operation.
     * @callback module:api/VendorInvoiceApi~vendorInvoiceUnProcessedGetAttachmentCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Number} id 
     * @param {module:api/VendorInvoiceApi~vendorInvoiceUnProcessedGetAttachmentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    this.vendorInvoiceUnProcessedGetAttachment = function(id, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling vendorInvoiceUnProcessedGetAttachment");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = Object;

      return this.apiClient.callApi(
        '/api/v1/Vendor/Invoice/unprocessed/{id}/attachment', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the vendorInvoiceUnProcessedGetUnProcessedInvoices operation.
     * @callback module:api/VendorInvoiceApi~vendorInvoiceUnProcessedGetUnProcessedInvoicesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/DkCloudDataModelVendorsInvoiceModel>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get un-booked Vendor Invoices
     * @param {module:api/VendorInvoiceApi~vendorInvoiceUnProcessedGetUnProcessedInvoicesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/DkCloudDataModelVendorsInvoiceModel>}
     */
    this.vendorInvoiceUnProcessedGetUnProcessedInvoices = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = [DkCloudDataModelVendorsInvoiceModel];

      return this.apiClient.callApi(
        '/api/v1/vendor/invoice/unprocessed', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the vendorInvoiceUnProcessedGetUnProcessedInvoicesById operation.
     * @callback module:api/VendorInvoiceApi~vendorInvoiceUnProcessedGetUnProcessedInvoicesByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DkCloudDataModelVendorsInvoiceModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a Vendor Invoice
     * @param {Number} id Invoice number
     * @param {module:api/VendorInvoiceApi~vendorInvoiceUnProcessedGetUnProcessedInvoicesByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DkCloudDataModelVendorsInvoiceModel}
     */
    this.vendorInvoiceUnProcessedGetUnProcessedInvoicesById = function(id, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling vendorInvoiceUnProcessedGetUnProcessedInvoicesById");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = DkCloudDataModelVendorsInvoiceModel;

      return this.apiClient.callApi(
        '/api/v1/vendor/invoice/unprocessed/{id}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
