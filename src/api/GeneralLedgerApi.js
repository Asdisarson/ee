/*
 * dkPlus API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.43
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/DkCloudDataModelGeneralLedgerAccount', 'model/DkCloudDataModelGeneralLedgerTransaction', 'model/DkPlusAPIModelsGeneralLedgerHead'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/DkCloudDataModelGeneralLedgerAccount'), require('../model/DkCloudDataModelGeneralLedgerTransaction'), require('../model/DkPlusAPIModelsGeneralLedgerHead'));
  } else {
    // Browser globals (root is window)
    if (!root.DkPlusApi) {
      root.DkPlusApi = {};
    }
    root.DkPlusApi.GeneralLedgerApi = factory(root.DkPlusApi.ApiClient, root.DkPlusApi.DkCloudDataModelGeneralLedgerAccount, root.DkPlusApi.DkCloudDataModelGeneralLedgerTransaction, root.DkPlusApi.DkPlusAPIModelsGeneralLedgerHead);
  }
}(this, function(ApiClient, DkCloudDataModelGeneralLedgerAccount, DkCloudDataModelGeneralLedgerTransaction, DkPlusAPIModelsGeneralLedgerHead) {
  'use strict';

  /**
   * GeneralLedger service.
   * @module api/GeneralLedgerApi
   * @version v1
   */

  /**
   * Constructs a new GeneralLedgerApi. 
   * @alias module:api/GeneralLedgerApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the generalLedgerAccountGet operation.
     * @callback module:api/GeneralLedgerApi~generalLedgerAccountGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/DkCloudDataModelGeneralLedgerAccount>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get General Ledger Accounts
     * @param {module:api/GeneralLedgerApi~generalLedgerAccountGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/DkCloudDataModelGeneralLedgerAccount>}
     */
    this.generalLedgerAccountGet = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = [DkCloudDataModelGeneralLedgerAccount];

      return this.apiClient.callApi(
        '/api/v1/generalledger/account', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the generalLedgerAccountGetAccount operation.
     * @callback module:api/GeneralLedgerApi~generalLedgerAccountGetAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DkCloudDataModelGeneralLedgerAccount} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get General Ledger Account
     * @param {String} _number Account Number
     * @param {module:api/GeneralLedgerApi~generalLedgerAccountGetAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DkCloudDataModelGeneralLedgerAccount}
     */
    this.generalLedgerAccountGetAccount = function(_number, callback) {
      var postBody = null;

      // verify the required parameter '_number' is set
      if (_number === undefined || _number === null) {
        throw new Error("Missing the required parameter '_number' when calling generalLedgerAccountGetAccount");
      }


      var pathParams = {
        'number': _number
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = DkCloudDataModelGeneralLedgerAccount;

      return this.apiClient.callApi(
        '/api/v1/generalledger/account/{number}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the generalLedgerAccountGetTransactions operation.
     * @callback module:api/GeneralLedgerApi~generalLedgerAccountGetTransactionsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/DkCloudDataModelGeneralLedgerTransaction>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get transactions for a General Ledger Account
     * @param {String} id Account Number
     * @param {Number} page Page Number (default=1)
     * @param {Number} count Transactions per Page (default=100)
     * @param {Object} opts Optional parameters
     * @param {Date} opts.createdAfter Created After
     * @param {Date} opts.createdBefore Created Before
     * @param {Date} opts.dueAfter Due After
     * @param {String} opts.dim1 Dimmention
     * @param {String} opts.voucher Voucher
     * @param {String} opts.reference Reference
     * @param {module:api/GeneralLedgerApi~generalLedgerAccountGetTransactionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/DkCloudDataModelGeneralLedgerTransaction>}
     */
    this.generalLedgerAccountGetTransactions = function(id, page, count, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling generalLedgerAccountGetTransactions");
      }

      // verify the required parameter 'page' is set
      if (page === undefined || page === null) {
        throw new Error("Missing the required parameter 'page' when calling generalLedgerAccountGetTransactions");
      }

      // verify the required parameter 'count' is set
      if (count === undefined || count === null) {
        throw new Error("Missing the required parameter 'count' when calling generalLedgerAccountGetTransactions");
      }


      var pathParams = {
        'id': id,
        'page': page,
        'count': count
      };
      var queryParams = {
        'createdAfter': opts['createdAfter'],
        'createdBefore': opts['createdBefore'],
        'dueAfter': opts['dueAfter'],
        'dim1': opts['dim1'],
        'voucher': opts['voucher'],
        'reference': opts['reference'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = [DkCloudDataModelGeneralLedgerTransaction];

      return this.apiClient.callApi(
        '/api/v1/generalledger/account/{id}/transaction/{page}/{count}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the generalLedgerJournalGetGeneralLedgerJournal operation.
     * @callback module:api/GeneralLedgerApi~generalLedgerJournalGetGeneralLedgerJournalCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a General Ledger Journal
     * @param {module:model/DkPlusAPIModelsGeneralLedgerHead} value Journal Model
     * @param {module:api/GeneralLedgerApi~generalLedgerJournalGetGeneralLedgerJournalCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.generalLedgerJournalGetGeneralLedgerJournal = function(value, callback) {
      var postBody = value;

      // verify the required parameter 'value' is set
      if (value === undefined || value === null) {
        throw new Error("Missing the required parameter 'value' when calling generalLedgerJournalGetGeneralLedgerJournal");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json', 'text/json', 'application/xml', 'text/xml', 'application/x-www-form-urlencoded'];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = null;

      return this.apiClient.callApi(
        '/api/v1/generalLedger/journal', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the generalLedgerTransactionGetGeneralTransactionPage operation.
     * @callback module:api/GeneralLedgerApi~generalLedgerTransactionGetGeneralTransactionPageCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/DkCloudDataModelGeneralLedgerTransaction>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get General Ledger Transaction
     * @param {Number} page Page Number (default=1)
     * @param {Number} count Transactions per Page (default=100)
     * @param {Object} opts Optional parameters
     * @param {String} opts.account General Ledger Account Number
     * @param {Date} opts.createdAfter Created After
     * @param {Date} opts.createdBefore Created Before
     * @param {Date} opts.modifiedAfter Modified After
     * @param {Date} opts.modifiedBefore Modified Before
     * @param {Date} opts.dueAfter Due After
     * @param {String} opts.dim1 Dimmention
     * @param {String} opts.voucher Voucher
     * @param {String} opts.reference Reference
     * @param {Number} opts.recordid Id Greter Than
     * @param {String} opts.include Fields to include
     * @param {String} opts.sort Field to sort by
     * @param {module:model/String} opts.sorttype Sort Direction
     * @param {module:api/GeneralLedgerApi~generalLedgerTransactionGetGeneralTransactionPageCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/DkCloudDataModelGeneralLedgerTransaction>}
     */
    this.generalLedgerTransactionGetGeneralTransactionPage = function(page, count, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'page' is set
      if (page === undefined || page === null) {
        throw new Error("Missing the required parameter 'page' when calling generalLedgerTransactionGetGeneralTransactionPage");
      }

      // verify the required parameter 'count' is set
      if (count === undefined || count === null) {
        throw new Error("Missing the required parameter 'count' when calling generalLedgerTransactionGetGeneralTransactionPage");
      }


      var pathParams = {
        'page': page,
        'count': count
      };
      var queryParams = {
        'account': opts['account'],
        'createdAfter': opts['createdAfter'],
        'createdBefore': opts['createdBefore'],
        'modifiedAfter': opts['modifiedAfter'],
        'modifiedBefore': opts['modifiedBefore'],
        'dueAfter': opts['dueAfter'],
        'dim1': opts['dim1'],
        'voucher': opts['voucher'],
        'reference': opts['reference'],
        'recordid': opts['recordid'],
        'include': opts['include'],
        'sort': opts['sort'],
        'sorttype': opts['sorttype'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = [DkCloudDataModelGeneralLedgerTransaction];

      return this.apiClient.callApi(
        '/api/v1/generalledger/transaction/page/{page}/{count}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
