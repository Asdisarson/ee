/*
 * dkPlus API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.43
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/DkCloudDataModelPayrollPayslip'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/DkCloudDataModelPayrollPayslip'));
  } else {
    // Browser globals (root is window)
    if (!root.DkPlusApi) {
      root.DkPlusApi = {};
    }
    root.DkPlusApi.PayrollApi = factory(root.DkPlusApi.ApiClient, root.DkPlusApi.DkCloudDataModelPayrollPayslip);
  }
}(this, function(ApiClient, DkCloudDataModelPayrollPayslip) {
  'use strict';

  /**
   * Payroll service.
   * @module api/PayrollApi
   * @version v1
   */

  /**
   * Constructs a new PayrollApi. 
   * @alias module:api/PayrollApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the payrollGetPayrollPayslip operation.
     * @callback module:api/PayrollApi~payrollGetPayrollPayslipCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/DkCloudDataModelPayrollPayslip>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Number} page 
     * @param {Number} count 
     * @param {Object} opts Optional parameters
     * @param {Date} opts.createdAfter 
     * @param {Date} opts.createdBefore 
     * @param {Date} opts.from 
     * @param {Date} opts.to 
     * @param {Date} opts.modifiedAfter 
     * @param {Date} opts.modifiedBefore 
     * @param {Number} opts.year 
     * @param {Date} opts.payDayAfter 
     * @param {Date} opts.payDayBefore 
     * @param {String} opts.dim1 
     * @param {String} opts.dim2 
     * @param {String} opts.dim3 
     * @param {String} opts.employee 
     * @param {Number} opts.recordid 
     * @param {String} opts.include 
     * @param {Number} opts.payRunNumber 
     * @param {Number} opts.paySlipNumber 
     * @param {String} opts.sort 
     * @param {module:model/String} opts.sorttype 
     * @param {module:api/PayrollApi~payrollGetPayrollPayslipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/DkCloudDataModelPayrollPayslip>}
     */
    this.payrollGetPayrollPayslip = function(page, count, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'page' is set
      if (page === undefined || page === null) {
        throw new Error("Missing the required parameter 'page' when calling payrollGetPayrollPayslip");
      }

      // verify the required parameter 'count' is set
      if (count === undefined || count === null) {
        throw new Error("Missing the required parameter 'count' when calling payrollGetPayrollPayslip");
      }


      var pathParams = {
        'page': page,
        'count': count
      };
      var queryParams = {
        'createdAfter': opts['createdAfter'],
        'createdBefore': opts['createdBefore'],
        'from': opts['from'],
        'to': opts['to'],
        'modifiedAfter': opts['modifiedAfter'],
        'modifiedBefore': opts['modifiedBefore'],
        'year': opts['year'],
        'payDayAfter': opts['payDayAfter'],
        'payDayBefore': opts['payDayBefore'],
        'dim1': opts['dim1'],
        'dim2': opts['dim2'],
        'dim3': opts['dim3'],
        'employee': opts['employee'],
        'recordid': opts['recordid'],
        'include': opts['include'],
        'payRunNumber': opts['payRunNumber'],
        'paySlipNumber': opts['paySlipNumber'],
        'sort': opts['sort'],
        'sorttype': opts['sorttype'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = [DkCloudDataModelPayrollPayslip];

      return this.apiClient.callApi(
        '/api/v1/payroll/payslip/{page}/{count}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
