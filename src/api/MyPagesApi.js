/*
 * dkPlus API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.43
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/DkCloudDataModelInviteInviteModel', 'model/DkPlusAPIModelsMyPageInvite', 'model/DkPlusAPIModelsMyPageInviteCreate'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/DkCloudDataModelInviteInviteModel'), require('../model/DkPlusAPIModelsMyPageInvite'), require('../model/DkPlusAPIModelsMyPageInviteCreate'));
  } else {
    // Browser globals (root is window)
    if (!root.DkPlusApi) {
      root.DkPlusApi = {};
    }
    root.DkPlusApi.MyPagesApi = factory(root.DkPlusApi.ApiClient, root.DkPlusApi.DkCloudDataModelInviteInviteModel, root.DkPlusApi.DkPlusAPIModelsMyPageInvite, root.DkPlusApi.DkPlusAPIModelsMyPageInviteCreate);
  }
}(this, function(ApiClient, DkCloudDataModelInviteInviteModel, DkPlusAPIModelsMyPageInvite, DkPlusAPIModelsMyPageInviteCreate) {
  'use strict';

  /**
   * MyPages service.
   * @module api/MyPagesApi
   * @version v1
   */

  /**
   * Constructs a new MyPagesApi. 
   * @alias module:api/MyPagesApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the myPagesCreateInvite operation.
     * @callback module:api/MyPagesApi~myPagesCreateInviteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DkCloudDataModelInviteInviteModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Invite
     * @param {module:model/DkPlusAPIModelsMyPageInviteCreate} obj Invite Create Model
     * @param {module:api/MyPagesApi~myPagesCreateInviteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DkCloudDataModelInviteInviteModel}
     */
    this.myPagesCreateInvite = function(obj, callback) {
      var postBody = obj;

      // verify the required parameter 'obj' is set
      if (obj === undefined || obj === null) {
        throw new Error("Missing the required parameter 'obj' when calling myPagesCreateInvite");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json', 'text/json', 'application/xml', 'text/xml', 'application/x-www-form-urlencoded'];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = DkCloudDataModelInviteInviteModel;

      return this.apiClient.callApi(
        '/api/v1/mypages/invites', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the myPagesGetInvitesForCustomer operation.
     * @callback module:api/MyPagesApi~myPagesGetInvitesForCustomerCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DkPlusAPIModelsMyPageInvite} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Invites
     * @param {String} customer 
     * @param {module:api/MyPagesApi~myPagesGetInvitesForCustomerCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DkPlusAPIModelsMyPageInvite}
     */
    this.myPagesGetInvitesForCustomer = function(customer, callback) {
      var postBody = null;

      // verify the required parameter 'customer' is set
      if (customer === undefined || customer === null) {
        throw new Error("Missing the required parameter 'customer' when calling myPagesGetInvitesForCustomer");
      }


      var pathParams = {
      };
      var queryParams = {
        'customer': customer,
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = DkPlusAPIModelsMyPageInvite;

      return this.apiClient.callApi(
        '/api/v1/mypages/invites', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the myPagesRemoveInvite operation.
     * @callback module:api/MyPagesApi~myPagesRemoveInviteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Remove Invite
     * @param {String} id Invite Id
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.permanent Permanent
     * @param {module:api/MyPagesApi~myPagesRemoveInviteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.myPagesRemoveInvite = function(id, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling myPagesRemoveInvite");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
        'permanent': opts['permanent'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = null;

      return this.apiClient.callApi(
        '/api/v1/mypages/invites/{id}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
