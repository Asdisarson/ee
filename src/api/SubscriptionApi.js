/*
 * dkPlus API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.43
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/DkPlusAPIModelsSubscriptionSubscriptionHead'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/DkPlusAPIModelsSubscriptionSubscriptionHead'));
  } else {
    // Browser globals (root is window)
    if (!root.DkPlusApi) {
      root.DkPlusApi = {};
    }
    root.DkPlusApi.SubscriptionApi = factory(root.DkPlusApi.ApiClient, root.DkPlusApi.DkPlusAPIModelsSubscriptionSubscriptionHead);
  }
}(this, function(ApiClient, DkPlusAPIModelsSubscriptionSubscriptionHead) {
  'use strict';

  /**
   * Subscription service.
   * @module api/SubscriptionApi
   * @version v1
   */

  /**
   * Constructs a new SubscriptionApi. 
   * @alias module:api/SubscriptionApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the subscriptionCreateSubscription operation.
     * @callback module:api/SubscriptionApi~subscriptionCreateSubscriptionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DkPlusAPIModelsSubscriptionSubscriptionHead} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a reoccurring invoice(Subscription)
     * @param {module:model/DkPlusAPIModelsSubscriptionSubscriptionHead} subscription Model
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.source Price source
     * @param {module:api/SubscriptionApi~subscriptionCreateSubscriptionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DkPlusAPIModelsSubscriptionSubscriptionHead}
     */
    this.subscriptionCreateSubscription = function(subscription, opts, callback) {
      opts = opts || {};
      var postBody = subscription;

      // verify the required parameter 'subscription' is set
      if (subscription === undefined || subscription === null) {
        throw new Error("Missing the required parameter 'subscription' when calling subscriptionCreateSubscription");
      }


      var pathParams = {
      };
      var queryParams = {
        'source': opts['source'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json', 'text/json', 'application/xml', 'text/xml', 'application/x-www-form-urlencoded'];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = DkPlusAPIModelsSubscriptionSubscriptionHead;

      return this.apiClient.callApi(
        '/api/v1/sales/subscription', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the subscriptionGetSubscription operation.
     * @callback module:api/SubscriptionApi~subscriptionGetSubscriptionCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/DkPlusAPIModelsSubscriptionSubscriptionHead>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Subscirption Orders
     * @param {Object} opts Optional parameters
     * @param {Number} opts.id Record id
     * @param {String} opts.customer Customer Number
     * @param {String} opts.itemcode Item Code
     * @param {Date} opts.modified Modified After
     * @param {String} opts.group Subscription Group
     * @param {Date} opts._date Subscription Date
     * @param {Boolean} opts.includelines Include Lines
     * @param {String} opts.properties Extra Properties
     * @param {String} opts.lineproperties Line Extra Properties
     * @param {module:api/SubscriptionApi~subscriptionGetSubscriptionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/DkPlusAPIModelsSubscriptionSubscriptionHead>}
     */
    this.subscriptionGetSubscription = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'id': opts['id'],
        'customer': opts['customer'],
        'itemcode': opts['itemcode'],
        'modified': opts['modified'],
        'group': opts['group'],
        'date': opts['_date'],
        'includelines': opts['includelines'],
        'properties': opts['properties'],
        'lineproperties': opts['lineproperties'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = [DkPlusAPIModelsSubscriptionSubscriptionHead];

      return this.apiClient.callApi(
        '/api/v1/sales/subscription', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
