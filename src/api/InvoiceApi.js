/*
 * dkPlus API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.43
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/DkCloudDataModelSalesInvoiceModel', 'model/DkPlusAPIModelsInvoiceHead', 'model/DkPlusAPIModelsInvoicePaymentPlanCancel', 'model/DkPlusAPIModelsInvoicePaymentPlanCreate', 'model/DkPlusMailModelMailInfo'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/DkCloudDataModelSalesInvoiceModel'), require('../model/DkPlusAPIModelsInvoiceHead'), require('../model/DkPlusAPIModelsInvoicePaymentPlanCancel'), require('../model/DkPlusAPIModelsInvoicePaymentPlanCreate'), require('../model/DkPlusMailModelMailInfo'));
  } else {
    // Browser globals (root is window)
    if (!root.DkPlusApi) {
      root.DkPlusApi = {};
    }
    root.DkPlusApi.InvoiceApi = factory(root.DkPlusApi.ApiClient, root.DkPlusApi.DkCloudDataModelSalesInvoiceModel, root.DkPlusApi.DkPlusAPIModelsInvoiceHead, root.DkPlusApi.DkPlusAPIModelsInvoicePaymentPlanCancel, root.DkPlusApi.DkPlusAPIModelsInvoicePaymentPlanCreate, root.DkPlusApi.DkPlusMailModelMailInfo);
  }
}(this, function(ApiClient, DkCloudDataModelSalesInvoiceModel, DkPlusAPIModelsInvoiceHead, DkPlusAPIModelsInvoicePaymentPlanCancel, DkPlusAPIModelsInvoicePaymentPlanCreate, DkPlusMailModelMailInfo) {
  'use strict';

  /**
   * Invoice service.
   * @module api/InvoiceApi
   * @version v1
   */

  /**
   * Constructs a new InvoiceApi. 
   * @alias module:api/InvoiceApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the invoiceCancelPaymentPlan operation.
     * @callback module:api/InvoiceApi~invoiceCancelPaymentPlanCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Cancel a Payment Plan for Invoice
     * @param {String} invoice Invoice Number
     * @param {Number} _number Payment Plan Id
     * @param {module:model/DkPlusAPIModelsInvoicePaymentPlanCancel} content Cancel Model
     * @param {module:api/InvoiceApi~invoiceCancelPaymentPlanCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.invoiceCancelPaymentPlan = function(invoice, _number, content, callback) {
      var postBody = content;

      // verify the required parameter 'invoice' is set
      if (invoice === undefined || invoice === null) {
        throw new Error("Missing the required parameter 'invoice' when calling invoiceCancelPaymentPlan");
      }

      // verify the required parameter '_number' is set
      if (_number === undefined || _number === null) {
        throw new Error("Missing the required parameter '_number' when calling invoiceCancelPaymentPlan");
      }

      // verify the required parameter 'content' is set
      if (content === undefined || content === null) {
        throw new Error("Missing the required parameter 'content' when calling invoiceCancelPaymentPlan");
      }


      var pathParams = {
        'invoice': invoice,
        'number': _number
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json', 'text/json', 'application/xml', 'text/xml', 'application/x-www-form-urlencoded'];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = null;

      return this.apiClient.callApi(
        '/api/v1/sales/invoice/{invoice}/paymentplan/{number}', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the invoiceCreateCreditInvoice operation.
     * @callback module:api/InvoiceApi~invoiceCreateCreditInvoiceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create credit invoice based on another invoice
     * @param {Number} id invoice number
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.post Book the invoice
     * @param {Date} opts._date Reverse Invoice Date
     * @param {module:api/InvoiceApi~invoiceCreateCreditInvoiceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.invoiceCreateCreditInvoice = function(id, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling invoiceCreateCreditInvoice");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
        'post': opts['post'],
        'date': opts['_date'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = null;

      return this.apiClient.callApi(
        '/api/v1/sales/invoice/{id}/reverse', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the invoiceCreateInvoice operation.
     * @callback module:api/InvoiceApi~invoiceCreateInvoiceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DkCloudDataModelSalesInvoiceModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a Sales Invoice
     * @param {module:model/DkPlusAPIModelsInvoiceHead} value Invoice Post Model
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.post Post Invoice
     * @param {module:api/InvoiceApi~invoiceCreateInvoiceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DkCloudDataModelSalesInvoiceModel}
     */
    this.invoiceCreateInvoice = function(value, opts, callback) {
      opts = opts || {};
      var postBody = value;

      // verify the required parameter 'value' is set
      if (value === undefined || value === null) {
        throw new Error("Missing the required parameter 'value' when calling invoiceCreateInvoice");
      }


      var pathParams = {
      };
      var queryParams = {
        'post': opts['post'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json', 'text/json', 'application/xml', 'text/xml', 'application/x-www-form-urlencoded'];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = DkCloudDataModelSalesInvoiceModel;

      return this.apiClient.callApi(
        '/api/v1/sales/invoice', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the invoiceCreatePaymentPlan operation.
     * @callback module:api/InvoiceApi~invoiceCreatePaymentPlanCallback
     * @param {String} error Error message, if any.
     * @param {'Number'} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a payment plan for a invoice
     * @param {String} _number Invoice Number
     * @param {module:model/DkPlusAPIModelsInvoicePaymentPlanCreate} content Payment Plan Model
     * @param {module:api/InvoiceApi~invoiceCreatePaymentPlanCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link 'Number'}
     */
    this.invoiceCreatePaymentPlan = function(_number, content, callback) {
      var postBody = content;

      // verify the required parameter '_number' is set
      if (_number === undefined || _number === null) {
        throw new Error("Missing the required parameter '_number' when calling invoiceCreatePaymentPlan");
      }

      // verify the required parameter 'content' is set
      if (content === undefined || content === null) {
        throw new Error("Missing the required parameter 'content' when calling invoiceCreatePaymentPlan");
      }


      var pathParams = {
        'number': _number
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json', 'text/json', 'application/xml', 'text/xml', 'application/x-www-form-urlencoded'];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = 'Number';

      return this.apiClient.callApi(
        '/api/v1/sales/invoice/{number}/paymentplan', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the invoiceDeleteInvoice operation.
     * @callback module:api/InvoiceApi~invoiceDeleteInvoiceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Use to delete invoices
     * @param {Object} opts Optional parameters
     * @param {String} opts.reference Reference Number
     * @param {String} opts.warehouse Warehouse Id
     * @param {Number} opts.id Unprinted invoice record Id
     * @param {Date} opts.created Invoice Created Date
     * @param {module:api/InvoiceApi~invoiceDeleteInvoiceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.invoiceDeleteInvoice = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'reference': opts['reference'],
        'warehouse': opts['warehouse'],
        'id': opts['id'],
        'created': opts['created'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = null;

      return this.apiClient.callApi(
        '/api/v1/sales/invoice', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the invoiceGetByDate operation.
     * @callback module:api/InvoiceApi~invoiceGetByDateCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/DkCloudDataModelSalesInvoiceModel>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Invoices by Date
     * @param {Date} invoicedate Invoice Date
     * @param {Number} page Page Number (default=1)
     * @param {Number} count Invoices per Page (default=100)
     * @param {module:api/InvoiceApi~invoiceGetByDateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/DkCloudDataModelSalesInvoiceModel>}
     */
    this.invoiceGetByDate = function(invoicedate, page, count, callback) {
      var postBody = null;

      // verify the required parameter 'invoicedate' is set
      if (invoicedate === undefined || invoicedate === null) {
        throw new Error("Missing the required parameter 'invoicedate' when calling invoiceGetByDate");
      }

      // verify the required parameter 'page' is set
      if (page === undefined || page === null) {
        throw new Error("Missing the required parameter 'page' when calling invoiceGetByDate");
      }

      // verify the required parameter 'count' is set
      if (count === undefined || count === null) {
        throw new Error("Missing the required parameter 'count' when calling invoiceGetByDate");
      }


      var pathParams = {
        'invoicedate': invoicedate,
        'page': page,
        'count': count
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = [DkCloudDataModelSalesInvoiceModel];

      return this.apiClient.callApi(
        '/api/v1/sales/invoice/date/{invoicedate}/{page}/{count}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the invoiceGetDiscounts operation.
     * @callback module:api/InvoiceApi~invoiceGetDiscountsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DkCloudDataModelSalesInvoiceModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This method returnes prices as if DK calculated based on product,customer and based on discount groups
     * @param {module:model/DkPlusAPIModelsInvoiceHead} value Invoce Model
     * @param {module:api/InvoiceApi~invoiceGetDiscountsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DkCloudDataModelSalesInvoiceModel}
     */
    this.invoiceGetDiscounts = function(value, callback) {
      var postBody = value;

      // verify the required parameter 'value' is set
      if (value === undefined || value === null) {
        throw new Error("Missing the required parameter 'value' when calling invoiceGetDiscounts");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json', 'text/json', 'application/xml', 'text/xml', 'application/x-www-form-urlencoded'];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = DkCloudDataModelSalesInvoiceModel;

      return this.apiClient.callApi(
        '/api/v1/sales/invoice/calculate', 'PATCH',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the invoiceGetHtml operation.
     * @callback module:api/InvoiceApi~invoiceGetHtmlCallback
     * @param {String} error Error message, if any.
     * @param {'String'} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a HTML generated from the Invoice
     * @param {String} _number 
     * @param {Object} opts Optional parameters
     * @param {String} opts.custom Use a predefined invoice look
     * @param {module:api/InvoiceApi~invoiceGetHtmlCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link 'String'}
     */
    this.invoiceGetHtml = function(_number, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter '_number' is set
      if (_number === undefined || _number === null) {
        throw new Error("Missing the required parameter '_number' when calling invoiceGetHtml");
      }


      var pathParams = {
        'number': _number
      };
      var queryParams = {
        'custom': opts['custom'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = 'String';

      return this.apiClient.callApi(
        '/api/v1/sales/invoice/{number}/html', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the invoiceGetInvoice operation.
     * @callback module:api/InvoiceApi~invoiceGetInvoiceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DkCloudDataModelSalesInvoiceModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a Sales Invoice
     * @param {String} _number Invoice Number
     * @param {module:api/InvoiceApi~invoiceGetInvoiceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DkCloudDataModelSalesInvoiceModel}
     */
    this.invoiceGetInvoice = function(_number, callback) {
      var postBody = null;

      // verify the required parameter '_number' is set
      if (_number === undefined || _number === null) {
        throw new Error("Missing the required parameter '_number' when calling invoiceGetInvoice");
      }


      var pathParams = {
        'number': _number
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = DkCloudDataModelSalesInvoiceModel;

      return this.apiClient.callApi(
        '/api/v1/sales/invoice/{number}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the invoiceGetPDF operation.
     * @callback module:api/InvoiceApi~invoiceGetPDFCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get PDF version of a invoice
     * @param {String} _number 
     * @param {Object} opts Optional parameters
     * @param {String} opts.custom 
     * @param {module:api/InvoiceApi~invoiceGetPDFCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    this.invoiceGetPDF = function(_number, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter '_number' is set
      if (_number === undefined || _number === null) {
        throw new Error("Missing the required parameter '_number' when calling invoiceGetPDF");
      }


      var pathParams = {
        'number': _number
      };
      var queryParams = {
        'custom': opts['custom'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = Object;

      return this.apiClient.callApi(
        '/api/v1/sales/invoice/{number}/pdf', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the invoiceGetPage operation.
     * @callback module:api/InvoiceApi~invoiceGetPageCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/DkCloudDataModelSalesInvoiceModel>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Sale Invoices
     * @param {Number} page Page Number (default=0)
     * @param {Number} count Invoices per Page (default=100)
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.includeLines Include Sale Lines with Invoice
     * @param {Date} opts.createdAfter Date on the format YYYY-MM-DD
     * @param {Date} opts.createdBefore Date on the format YYYY-MM-DD
     * @param {Date} opts.modifiedAfter Modified After
     * @param {Date} opts.modifiedBefore Modified Before
     * @param {Date} opts.dueAfter 
     * @param {String} opts.salesPerson Sales person number
     * @param {String} opts.reference Reference Number
     * @param {Number} opts.recordid Record Id After
     * @param {String} opts.customer Customer Number
     * @param {String} opts.project Project Number
     * @param {String} opts.include Fields to include
     * @param {module:api/InvoiceApi~invoiceGetPageCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/DkCloudDataModelSalesInvoiceModel>}
     */
    this.invoiceGetPage = function(page, count, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'page' is set
      if (page === undefined || page === null) {
        throw new Error("Missing the required parameter 'page' when calling invoiceGetPage");
      }

      // verify the required parameter 'count' is set
      if (count === undefined || count === null) {
        throw new Error("Missing the required parameter 'count' when calling invoiceGetPage");
      }


      var pathParams = {
        'page': page,
        'count': count
      };
      var queryParams = {
        'includeLines': opts['includeLines'],
        'createdAfter': opts['createdAfter'],
        'createdBefore': opts['createdBefore'],
        'modifiedAfter': opts['modifiedAfter'],
        'modifiedBefore': opts['modifiedBefore'],
        'dueAfter': opts['dueAfter'],
        'salesPerson': opts['salesPerson'],
        'reference': opts['reference'],
        'recordid': opts['recordid'],
        'customer': opts['customer'],
        'project': opts['project'],
        'include': opts['include'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = [DkCloudDataModelSalesInvoiceModel];

      return this.apiClient.callApi(
        '/api/v1/sales/invoice/page/{page}/{count}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the invoiceGetReference operation.
     * @callback module:api/InvoiceApi~invoiceGetReferenceCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/DkCloudDataModelSalesInvoiceModel>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Invoice by Reference Number
     * @param {String} reference Reference Number
     * @param {Number} page Page Number (default=1)
     * @param {Number} count Invoices per Page (default=100)
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.type Invoice type
     * @param {module:api/InvoiceApi~invoiceGetReferenceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/DkCloudDataModelSalesInvoiceModel>}
     */
    this.invoiceGetReference = function(reference, page, count, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'reference' is set
      if (reference === undefined || reference === null) {
        throw new Error("Missing the required parameter 'reference' when calling invoiceGetReference");
      }

      // verify the required parameter 'page' is set
      if (page === undefined || page === null) {
        throw new Error("Missing the required parameter 'page' when calling invoiceGetReference");
      }

      // verify the required parameter 'count' is set
      if (count === undefined || count === null) {
        throw new Error("Missing the required parameter 'count' when calling invoiceGetReference");
      }


      var pathParams = {
        'reference': reference,
        'page': page,
        'count': count
      };
      var queryParams = {
        'type': opts['type'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = [DkCloudDataModelSalesInvoiceModel];

      return this.apiClient.callApi(
        '/api/v1/sales/invoice/reference/{reference}/{page}/{count}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the invoiceRefreshInvoiceFromDK operation.
     * @callback module:api/InvoiceApi~invoiceRefreshInvoiceFromDKCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Refresh invoice in dk+ from DK(Force Method)
     * @param {String} _number Invoice Number
     * @param {module:api/InvoiceApi~invoiceRefreshInvoiceFromDKCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.invoiceRefreshInvoiceFromDK = function(_number, callback) {
      var postBody = null;

      // verify the required parameter '_number' is set
      if (_number === undefined || _number === null) {
        throw new Error("Missing the required parameter '_number' when calling invoiceRefreshInvoiceFromDK");
      }


      var pathParams = {
        'number': _number
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = null;

      return this.apiClient.callApi(
        '/api/v1/sales/invoice/{number}/refresh', 'PATCH',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the invoiceSendEmail operation.
     * @callback module:api/InvoiceApi~invoiceSendEmailCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Send invoice as email.
     * @param {String} _number invoice number
     * @param {module:model/DkPlusMailModelMailInfo} message Message model
     * @param {Object} opts Optional parameters
     * @param {String} opts.custom Use a predefined invoice look
     * @param {module:api/InvoiceApi~invoiceSendEmailCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.invoiceSendEmail = function(_number, message, opts, callback) {
      opts = opts || {};
      var postBody = message;

      // verify the required parameter '_number' is set
      if (_number === undefined || _number === null) {
        throw new Error("Missing the required parameter '_number' when calling invoiceSendEmail");
      }

      // verify the required parameter 'message' is set
      if (message === undefined || message === null) {
        throw new Error("Missing the required parameter 'message' when calling invoiceSendEmail");
      }


      var pathParams = {
        'number': _number
      };
      var queryParams = {
        'custom': opts['custom'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json', 'text/json', 'application/xml', 'text/xml', 'application/x-www-form-urlencoded'];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = null;

      return this.apiClient.callApi(
        '/api/v1/sales/invoice/{number}/email', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the invoiceSendMassEmail operation.
     * @callback module:api/InvoiceApi~invoiceSendMassEmailCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} _number Invoice
     * @param {module:model/DkPlusMailModelMailInfo} message Message Model
     * @param {Object} opts Optional parameters
     * @param {String} opts.custom Use a predefined invoice look
     * @param {module:api/InvoiceApi~invoiceSendMassEmailCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    this.invoiceSendMassEmail = function(_number, message, opts, callback) {
      opts = opts || {};
      var postBody = message;

      // verify the required parameter '_number' is set
      if (_number === undefined || _number === null) {
        throw new Error("Missing the required parameter '_number' when calling invoiceSendMassEmail");
      }

      // verify the required parameter 'message' is set
      if (message === undefined || message === null) {
        throw new Error("Missing the required parameter 'message' when calling invoiceSendMassEmail");
      }


      var pathParams = {
      };
      var queryParams = {
        'number': _number,
        'custom': opts['custom'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json', 'text/json', 'application/xml', 'text/xml', 'application/x-www-form-urlencoded'];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = Object;

      return this.apiClient.callApi(
        '/api/v1/sales/invoice/sendto/email', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
