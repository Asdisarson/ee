/*
 * dkPlus API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.43
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/DkCloudDataModelMembersApplication', 'model/DkPlusAPIModelsMemberMemberApplicationCreated', 'model/SystemIOStream', 'model/SystemWebMvcFileContentResult'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/DkCloudDataModelMembersApplication'), require('../model/DkPlusAPIModelsMemberMemberApplicationCreated'), require('../model/SystemIOStream'), require('../model/SystemWebMvcFileContentResult'));
  } else {
    // Browser globals (root is window)
    if (!root.DkPlusApi) {
      root.DkPlusApi = {};
    }
    root.DkPlusApi.MemberApplicationApi = factory(root.DkPlusApi.ApiClient, root.DkPlusApi.DkCloudDataModelMembersApplication, root.DkPlusApi.DkPlusAPIModelsMemberMemberApplicationCreated, root.DkPlusApi.SystemIOStream, root.DkPlusApi.SystemWebMvcFileContentResult);
  }
}(this, function(ApiClient, DkCloudDataModelMembersApplication, DkPlusAPIModelsMemberMemberApplicationCreated, SystemIOStream, SystemWebMvcFileContentResult) {
  'use strict';

  /**
   * MemberApplication service.
   * @module api/MemberApplicationApi
   * @version v1
   */

  /**
   * Constructs a new MemberApplicationApi. 
   * @alias module:api/MemberApplicationApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the memberApplicationGetApplicationAttachmentContent operation.
     * @callback module:api/MemberApplicationApi~memberApplicationGetApplicationAttachmentContentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SystemWebMvcFileContentResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Application Attachment
     * @param {String} fund Fund Code
     * @param {Number} application Application Id
     * @param {Number} id Attachment Id
     * @param {module:api/MemberApplicationApi~memberApplicationGetApplicationAttachmentContentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SystemWebMvcFileContentResult}
     */
    this.memberApplicationGetApplicationAttachmentContent = function(fund, application, id, callback) {
      var postBody = null;

      // verify the required parameter 'fund' is set
      if (fund === undefined || fund === null) {
        throw new Error("Missing the required parameter 'fund' when calling memberApplicationGetApplicationAttachmentContent");
      }

      // verify the required parameter 'application' is set
      if (application === undefined || application === null) {
        throw new Error("Missing the required parameter 'application' when calling memberApplicationGetApplicationAttachmentContent");
      }

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling memberApplicationGetApplicationAttachmentContent");
      }


      var pathParams = {
        'fund': fund,
        'application': application,
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = SystemWebMvcFileContentResult;

      return this.apiClient.callApi(
        '/api/v1/Member/fund/{fund}/application/{application}/attachments/{id}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the memberApplicationGetApplicationAttachments operation.
     * @callback module:api/MemberApplicationApi~memberApplicationGetApplicationAttachmentsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SystemIOStream} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Attachment list for an Application
     * @param {String} fund Fund Code
     * @param {Number} id Application Id
     * @param {module:api/MemberApplicationApi~memberApplicationGetApplicationAttachmentsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SystemIOStream}
     */
    this.memberApplicationGetApplicationAttachments = function(fund, id, callback) {
      var postBody = null;

      // verify the required parameter 'fund' is set
      if (fund === undefined || fund === null) {
        throw new Error("Missing the required parameter 'fund' when calling memberApplicationGetApplicationAttachments");
      }

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling memberApplicationGetApplicationAttachments");
      }


      var pathParams = {
        'fund': fund,
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = SystemIOStream;

      return this.apiClient.callApi(
        '/api/v1/Member/fund/{fund}/application/{id}/attachments', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the memberApplicationGetApplications operation.
     * @callback module:api/MemberApplicationApi~memberApplicationGetApplicationsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/DkCloudDataModelMembersApplication>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Member Applications
     * @param {String} _number Member Number
     * @param {module:api/MemberApplicationApi~memberApplicationGetApplicationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/DkCloudDataModelMembersApplication>}
     */
    this.memberApplicationGetApplications = function(_number, callback) {
      var postBody = null;

      // verify the required parameter '_number' is set
      if (_number === undefined || _number === null) {
        throw new Error("Missing the required parameter '_number' when calling memberApplicationGetApplications");
      }


      var pathParams = {
        'number': _number
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = [DkCloudDataModelMembersApplication];

      return this.apiClient.callApi(
        '/api/v1/Member/{number}/application', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the memberApplicationPostApplication operation.
     * @callback module:api/MemberApplicationApi~memberApplicationPostApplicationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DkPlusAPIModelsMemberMemberApplicationCreated} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a Member Application
     * @param {String} _number Member Number
     * @param {module:model/DkCloudDataModelMembersApplication} obj Application Model
     * @param {module:api/MemberApplicationApi~memberApplicationPostApplicationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DkPlusAPIModelsMemberMemberApplicationCreated}
     */
    this.memberApplicationPostApplication = function(_number, obj, callback) {
      var postBody = obj;

      // verify the required parameter '_number' is set
      if (_number === undefined || _number === null) {
        throw new Error("Missing the required parameter '_number' when calling memberApplicationPostApplication");
      }

      // verify the required parameter 'obj' is set
      if (obj === undefined || obj === null) {
        throw new Error("Missing the required parameter 'obj' when calling memberApplicationPostApplication");
      }


      var pathParams = {
        'number': _number
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json', 'text/json', 'application/xml', 'text/xml', 'application/x-www-form-urlencoded'];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = DkPlusAPIModelsMemberMemberApplicationCreated;

      return this.apiClient.callApi(
        '/api/v1/member/{number}/application', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the memberApplicationUpdateApplicationStatus operation.
     * @callback module:api/MemberApplicationApi~memberApplicationUpdateApplicationStatusCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a Member Application
     * @param {String} _number Member Number
     * @param {Number} id Application Id
     * @param {module:model/String} status Application Status
     * @param {String} fund Fund Code
     * @param {module:api/MemberApplicationApi~memberApplicationUpdateApplicationStatusCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.memberApplicationUpdateApplicationStatus = function(_number, id, status, fund, callback) {
      var postBody = null;

      // verify the required parameter '_number' is set
      if (_number === undefined || _number === null) {
        throw new Error("Missing the required parameter '_number' when calling memberApplicationUpdateApplicationStatus");
      }

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling memberApplicationUpdateApplicationStatus");
      }

      // verify the required parameter 'status' is set
      if (status === undefined || status === null) {
        throw new Error("Missing the required parameter 'status' when calling memberApplicationUpdateApplicationStatus");
      }

      // verify the required parameter 'fund' is set
      if (fund === undefined || fund === null) {
        throw new Error("Missing the required parameter 'fund' when calling memberApplicationUpdateApplicationStatus");
      }


      var pathParams = {
        'number': _number,
        'id': id
      };
      var queryParams = {
        'status': status,
        'fund': fund,
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = null;

      return this.apiClient.callApi(
        '/api/v1/member/{number}/application/{id}', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the memberApplicationUploadFile operation.
     * @callback module:api/MemberApplicationApi~memberApplicationUploadFileCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} _number 
     * @param {Number} id 
     * @param {module:api/MemberApplicationApi~memberApplicationUploadFileCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    this.memberApplicationUploadFile = function(_number, id, callback) {
      var postBody = null;

      // verify the required parameter '_number' is set
      if (_number === undefined || _number === null) {
        throw new Error("Missing the required parameter '_number' when calling memberApplicationUploadFile");
      }

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling memberApplicationUploadFile");
      }


      var pathParams = {
        'number': _number,
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = Object;

      return this.apiClient.callApi(
        '/api/v1/member/{number}/application/{id}/attachment', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
